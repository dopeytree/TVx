{"0": {
    "doc": "Unraid Template Automation",
    "title": "ü§ñ Unraid Template Automation Guide",
    "content": "This guide explains the automation system for the TVx Unraid template. ",
    "url": "/TVx/development/github/AUTOMATION.html#-unraid-template-automation-guide",
    
    "relUrl": "/development/github/AUTOMATION.html#-unraid-template-automation-guide"
  },"1": {
    "doc": "Unraid Template Automation",
    "title": "üìã Overview",
    "content": "Two GitHub Actions workflows automatically maintain the Unraid template: . | update-unraid-template.yml - Auto-updates template on new releases | validate-unraid-template.yml - Validates template on changes | . ",
    "url": "/TVx/development/github/AUTOMATION.html#-overview",
    
    "relUrl": "/development/github/AUTOMATION.html#-overview"
  },"2": {
    "doc": "Unraid Template Automation",
    "title": "üöÄ How It Works",
    "content": "Automatic Updates on Release . When you create a new GitHub release, the workflow automatically: . | ‚úÖ Updates the &lt;Date&gt; tag with the current date | ‚úÖ Extracts release notes and updates the &lt;Changes&gt; section | ‚úÖ Maintains the last 3 version entries in the changelog | ‚úÖ Validates the XML syntax | ‚úÖ Commits and pushes changes to your repository | . Template Validation . On every push or PR that modifies the template: . | ‚úÖ Validates XML syntax | ‚úÖ Checks for required elements | ‚úÖ Detects common issues (unescaped characters, duplicate tags) | ‚úÖ Provides a summary report | . ",
    "url": "/TVx/development/github/AUTOMATION.html#-how-it-works",
    
    "relUrl": "/development/github/AUTOMATION.html#-how-it-works"
  },"3": {
    "doc": "Unraid Template Automation",
    "title": "üìñ Usage Guide",
    "content": "Creating a New Release (Triggers Auto-Update) . Option 1: Via GitHub Web Interface . | Go to your repository: https://github.com/dopeytree/TVx | Click Releases ‚Üí Draft a new release | Click Choose a tag ‚Üí Type version (e.g., v1.0.1) | Fill in Release title: v1.0.1 - Brief description | Add Release notes (these will be added to the template): ```markdown ",
    "url": "/TVx/development/github/AUTOMATION.html#-usage-guide",
    
    "relUrl": "/development/github/AUTOMATION.html#-usage-guide"
  },"4": {
    "doc": "Unraid Template Automation",
    "title": "What‚Äôs New",
    "content": ". | Added logging system | Fixed video playback issues | Improved CRT effects | . ",
    "url": "/TVx/development/github/AUTOMATION.html#whats-new",
    
    "relUrl": "/development/github/AUTOMATION.html#whats-new"
  },"5": {
    "doc": "Unraid Template Automation",
    "title": "Bug Fixes",
    "content": ". | Fixed port configuration | Resolved CORS issues ``` | . | Click Publish release | üéâ The workflow will automatically update your template! | . Option 2: Via Command Line . | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 . | # Create a new tag git tag -a v1.0.1 -m \"Version 1.0.1 - Description\" # Push the tag git push origin v1.0.1 # Create release using GitHub CLI (optional) gh release create v1.0.1 \\ --title \"v1.0.1 - Brief description\" \\ --notes \" ## What's New - Feature 1 - Feature 2 ## Bug Fixes - Fix 1 - Fix 2 \" . | . Manual Trigger . You can manually trigger the template update: . | Go to Actions tab in your repository | Select Update Unraid Template | Click Run workflow | Select branch and click Run workflow | . ",
    "url": "/TVx/development/github/AUTOMATION.html#bug-fixes",
    
    "relUrl": "/development/github/AUTOMATION.html#bug-fixes"
  },"6": {
    "doc": "Unraid Template Automation",
    "title": "üîß Workflow Details",
    "content": "update-unraid-template.yml . Triggers: . | Automatic: When a new release is published | Manual: Via workflow_dispatch | . What it updates: . | &lt;Date&gt; tag with current date | &lt;Changes&gt; section with latest release notes | Keeps last 3 versions in changelog to prevent bloat | . Example output in template: . | 1 2 3 4 5 6 7 8 9 10 11 . | &lt;Changes&gt; ### v1.0.1 (2025-10-16) - Added logging system - Fixed video playback issues - Improved CRT effects ### v1.0.0 (2025-10-13) - Initial Unraid Community Applications release - Full IPTV player with EPG support &lt;/Changes&gt; &lt;Date&gt;2025-10-16&lt;/Date&gt; . | . validate-unraid-template.yml . Triggers: . | On push to main branch (if template changed) | On pull requests (if template changed) | Manual trigger | . Checks: . | XML syntax validity | Required elements present (Name, Repository, Overview, etc.) | No unescaped &amp; characters (should be &amp;amp;) | No duplicate tags | Proper port format in WebUI | . ",
    "url": "/TVx/development/github/AUTOMATION.html#-workflow-details",
    
    "relUrl": "/development/github/AUTOMATION.html#-workflow-details"
  },"7": {
    "doc": "Unraid Template Automation",
    "title": "üìù Best Practices",
    "content": "Release Notes Format . Write clear, user-friendly release notes: . | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 . | ## What's New in v1.0.1 ### Features - üé® New CRT effect presets - ‚ö° Improved channel switching speed - üìä Added logging system ### Bug Fixes - Fixed video playback on Safari - Resolved EPG timezone issues - Fixed port configuration ### Documentation - Updated installation guide - Added troubleshooting section . | . Version Numbering . Follow Semantic Versioning: . | Major (v2.0.0): Breaking changes | Minor (v1.1.0): New features, backwards compatible | Patch (v1.0.1): Bug fixes | . Testing Before Release . | Test your changes locally | Create a pre-release to test automation: | 1 2 3 4 . | gh release create v1.0.1-beta \\ --title \"v1.0.1 Beta\" \\ --notes \"Testing release\" \\ --prerelease . | . | Check the auto-generated template | Create the official release | . ",
    "url": "/TVx/development/github/AUTOMATION.html#-best-practices",
    
    "relUrl": "/development/github/AUTOMATION.html#-best-practices"
  },"8": {
    "doc": "Unraid Template Automation",
    "title": "üîç Troubleshooting",
    "content": "Workflow Failed . | Go to Actions tab | Click on the failed workflow run | Check the error message | Common issues: . | XML syntax errors | Missing permissions | Invalid release notes format | . | . Changes Not Appearing . | Check if workflow completed successfully | Verify you‚Äôre on the correct branch | Clear browser cache | Pull latest changes: git pull origin main | . Manual Fix Required . If automation fails, you can manually update: . | 1 2 3 4 5 6 7 8 9 . | # Edit the template nano tvx-unraid-template.xml # Update Date and Changes sections manually # Commit and push git add tvx-unraid-template.xml git commit -m \"Manual template update for v1.0.1\" git push . | . ",
    "url": "/TVx/development/github/AUTOMATION.html#-troubleshooting",
    
    "relUrl": "/development/github/AUTOMATION.html#-troubleshooting"
  },"9": {
    "doc": "Unraid Template Automation",
    "title": "üéØ What Gets Automated",
    "content": "‚úÖ Automated: . | Date updates | Changelog updates from release notes | XML validation | Git commits and pushes | . ‚ùå Not Automated (requires manual editing): . | Version-specific Config changes | New features in Overview | Icon or screenshot updates | Category changes | Port or path modifications | . ",
    "url": "/TVx/development/github/AUTOMATION.html#-what-gets-automated",
    
    "relUrl": "/development/github/AUTOMATION.html#-what-gets-automated"
  },"10": {
    "doc": "Unraid Template Automation",
    "title": "üìä Monitoring",
    "content": "Check Workflow Status . View all workflow runs: . | 1 . | gh run list --workflow=\"Update Unraid Template\" . | . View latest run details: . | 1 . | gh run view --log . | . Notifications . GitHub will notify you if workflows fail: . | Email notifications | Web notifications | Can configure Slack/Discord webhooks | . ",
    "url": "/TVx/development/github/AUTOMATION.html#-monitoring",
    
    "relUrl": "/development/github/AUTOMATION.html#-monitoring"
  },"11": {
    "doc": "Unraid Template Automation",
    "title": "üîê Permissions",
    "content": "The workflows need: . | ‚úÖ contents: write - To commit changes | ‚úÖ GITHUB_TOKEN - Automatically provided | . No additional secrets needed! . ",
    "url": "/TVx/development/github/AUTOMATION.html#-permissions",
    
    "relUrl": "/development/github/AUTOMATION.html#-permissions"
  },"12": {
    "doc": "Unraid Template Automation",
    "title": "üéâ Benefits",
    "content": ". | Consistency - Template always up-to-date with releases | Time Saving - No manual XML editing needed | Quality - Automatic validation prevents errors | Transparency - All changes tracked in git history | User Experience - Users always see latest changes in Community Apps | . ",
    "url": "/TVx/development/github/AUTOMATION.html#-benefits",
    
    "relUrl": "/development/github/AUTOMATION.html#-benefits"
  },"13": {
    "doc": "Unraid Template Automation",
    "title": "üìö Additional Resources",
    "content": ". | GitHub Actions Documentation | Unraid Template Schema | Semantic Versioning | . Questions? Open an issue or ask in the Unraid forum thread! . ",
    "url": "/TVx/development/github/AUTOMATION.html#-additional-resources",
    
    "relUrl": "/development/github/AUTOMATION.html#-additional-resources"
  },"14": {
    "doc": "Unraid Template Automation",
    "title": "Unraid Template Automation",
    "content": " ",
    "url": "/TVx/development/github/AUTOMATION.html",
    
    "relUrl": "/development/github/AUTOMATION.html"
  },"15": {
    "doc": "Separate Repo Automation",
    "title": "ü§ñ Unraid Template Automation - Separate Repository Setup",
    "content": "This guide is for maintaining your Unraid template in a separate repository (the common pattern used by many developers). ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#-unraid-template-automation---separate-repository-setup",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#-unraid-template-automation---separate-repository-setup"
  },"16": {
    "doc": "Separate Repo Automation",
    "title": "üìã Repository Structure",
    "content": "Two Repositories: . | dopeytree/TVx - Your main application repository | dopeytree/unraid-templates - Your Unraid templates repository | . ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#-repository-structure",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#-repository-structure"
  },"17": {
    "doc": "Separate Repo Automation",
    "title": "üîß Setup Required",
    "content": "Step 1: Create Personal Access Token (PAT) . The workflow needs permission to push to your unraid-templates repository. | Go to GitHub Settings ‚Üí Developer settings ‚Üí Personal access tokens ‚Üí Tokens (classic) . | Or direct link: https://github.com/settings/tokens | . | Click Generate new token ‚Üí Generate new token (classic) . | Configure the token: . | Note: Unraid Templates Automation | Expiration: No expiration (or 1 year) | Scopes: Select: . | ‚úÖ repo (Full control of private repositories) | ‚úÖ workflow (Update GitHub Action workflows) | . | . | Click Generate token . | COPY THE TOKEN NOW - You won‚Äôt see it again! | . Step 2: Add Token to TVx Repository Secrets . | Go to your TVx repository settings: . | https://github.com/dopeytree/TVx/settings/secrets/actions | . | Click New repository secret . | Configure: . | Name: PAT_UNRAID_TEMPLATES | Value: Paste the token you copied | Click Add secret | . | . Step 3: Create/Verify unraid-templates Repository . If you don‚Äôt have it yet: . | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 . | # Create the repository on GitHub first, then: git clone https://github.com/dopeytree/unraid-templates.git cd unraid-templates # Add a README echo \"# Unraid Templates Docker templates for Unraid Community Applications. Maintained by dopeytree. \" &gt; README.md git add README.md git commit -m \"Initial commit\" git push . | . Step 4: Add Workflow to TVx Repository . The workflow file has been created at: .github/workflows/update-unraid-template-remote.yml . Commit and push it: . | 1 2 3 4 5 . | cd /Users/ed/TVx git add .github/workflows/update-unraid-template-remote.yml git commit -m \"ü§ñ Add workflow to update template in separate repo\" git push . | . ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#-setup-required",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#-setup-required"
  },"18": {
    "doc": "Separate Repo Automation",
    "title": "üöÄ How It Works",
    "content": "On Every Release: . | Workflow triggers when you create a release in TVx | Checks out both repos: . | Your TVx repository | Your unraid-templates repository | . | Updates template: . | Copies tvx-unraid-template.xml ‚Üí unraid-templates/tvx.xml | Updates &lt;Date&gt; tag | Updates &lt;Changes&gt; from release notes | . | Commits to unraid-templates: . | Pushes updated tvx.xml to unraid-templates repo | . | Optionally syncs back: . | Updates local tvx-unraid-template.xml in TVx repo | . | . ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#-how-it-works",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#-how-it-works"
  },"19": {
    "doc": "Separate Repo Automation",
    "title": "üìù Template URL Update",
    "content": "Update your template‚Äôs &lt;TemplateURL&gt; to point to the separate repo: . | 1 . | &lt;TemplateURL&gt;https://raw.githubusercontent.com/dopeytree/unraid-templates/main/tvx.xml&lt;/TemplateURL&gt; . | . Instead of: . | 1 . | &lt;TemplateURL&gt;https://raw.githubusercontent.com/dopeytree/TVx/main/tvx-unraid-template.xml&lt;/TemplateURL&gt; . | . ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#-template-url-update",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#-template-url-update"
  },"20": {
    "doc": "Separate Repo Automation",
    "title": "üéØ Repository Patterns",
    "content": "Pattern 1: Separate Repo (Recommended) . Structure: . | 1 2 3 4 5 6 7 8 . | dopeytree/TVx/ ‚îú‚îÄ‚îÄ tvx-unraid-template.xml (development copy) ‚îî‚îÄ‚îÄ .github/workflows/update-unraid-template-remote.yml dopeytree/unraid-templates/ ‚îú‚îÄ‚îÄ tvx.xml (published template) ‚îú‚îÄ‚îÄ other-app.xml ‚îî‚îÄ‚îÄ README.md . | . Pros: . | ‚úÖ Clean separation of concerns | ‚úÖ Multiple apps in one templates repo | ‚úÖ Easy for Community Apps to track | ‚úÖ Standard pattern used by most developers | . Cons: . | ‚ö†Ô∏è Requires PAT setup | ‚ö†Ô∏è Two repos to manage | . Pattern 2: Same Repo . Structure: . | 1 2 3 . | dopeytree/TVx/ ‚îú‚îÄ‚îÄ tvx-unraid-template.xml ‚îî‚îÄ‚îÄ .github/workflows/update-unraid-template.yml . | . Pros: . | ‚úÖ Simpler setup | ‚úÖ Everything in one place | ‚úÖ No PAT needed | . Cons: . | ‚ö†Ô∏è Template mixed with application code | ‚ö†Ô∏è Harder if you have multiple apps | . ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#-repository-patterns",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#-repository-patterns"
  },"21": {
    "doc": "Separate Repo Automation",
    "title": "üîÑ Workflow Comparison",
    "content": "Separate Repo Workflow . File: .github/workflows/update-unraid-template-remote.yml . What it does: . | Checkout TVx repo | Checkout unraid-templates repo (using PAT) | Copy template between repos | Update template | Push to unraid-templates | Optionally sync back to TVx | . Same Repo Workflow . File: .github/workflows/update-unraid-template.yml . What it does: . | Checkout TVx repo | Update template in place | Push to TVx | . ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#-workflow-comparison",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#-workflow-comparison"
  },"22": {
    "doc": "Separate Repo Automation",
    "title": "üß™ Testing",
    "content": "Test the Separate Repo Workflow . | Create a test release in TVx: . | 1 2 3 4 . | gh release create v1.0.1-test \\ --title \"Test Separate Repo Automation\" \\ --notes \"Testing automatic template update to separate repo\" \\ --prerelease . | . | Watch the workflow: . | TVx Actions: https://github.com/dopeytree/TVx/actions | Look for ‚ÄúUpdate Unraid Template (Separate Repo)‚Äù | . | Verify in unraid-templates: . | Check: https://github.com/dopeytree/unraid-templates | Look for automated commit | Check tvx.xml was updated | . | Check TVx was synced: . | Pull latest: git pull | Check tvx-unraid-template.xml was also updated | . | . ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#-testing",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#-testing"
  },"23": {
    "doc": "Separate Repo Automation",
    "title": "‚öôÔ∏è Configuration Options",
    "content": "Change Template Filename . If you want a different filename in unraid-templates: . | 1 2 3 4 . | # In update-unraid-template-remote.yml - name: Copy template to unraid-templates repo run: | cp tvx/tvx-unraid-template.xml unraid-templates/your-name.xml . | . Disable Local Sync . If you don‚Äôt want to sync back to TVx repo, comment out this step: . | 1 2 3 4 . | # - name: Also update local template (optional) # working-directory: tvx # run: | # ... | . Different Branch . If your unraid-templates uses a different branch: . | 1 2 3 4 5 6 7 . | - name: Checkout unraid-templates repository uses: actions/checkout@v4 with: repository: dopeytree/unraid-templates ref: master # or whatever branch you use token: $ path: unraid-templates . | . ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#%EF%B8%8F-configuration-options",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#Ô∏è-configuration-options"
  },"24": {
    "doc": "Separate Repo Automation",
    "title": "üêõ Troubleshooting",
    "content": "Error: ‚ÄúCould not resolve to a Repository‚Äù . Problem: PAT secret not set or incorrect repository name . Fix: . | Verify secret exists: Settings ‚Üí Secrets ‚Üí Actions | Check repository name in workflow matches yours | Regenerate PAT if needed | . Error: ‚ÄúAuthentication failed‚Äù . Problem: PAT doesn‚Äôt have correct permissions . Fix: . | Go to https://github.com/settings/tokens | Find your token | Edit and ensure repo and workflow scopes are checked | Update secret in TVx repository | . Error: ‚Äúrefusing to allow a Personal Access Token‚Äù . Problem: Fine-grained PAT instead of Classic PAT . Fix: . | Use Classic PAT, not Fine-grained | Or configure fine-grained PAT with correct repository permissions | . Template Not Pushed to unraid-templates . Check: . | 1 2 3 . | # View workflow logs gh run list --repo dopeytree/TVx --workflow=\"Update Unraid Template (Separate Repo)\" gh run view --repo dopeytree/TVx --log . | . Common causes: . | PAT expired | Wrong repository name | Wrong branch name | Repository doesn‚Äôt exist | . ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#-troubleshooting",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#-troubleshooting"
  },"25": {
    "doc": "Separate Repo Automation",
    "title": "üìö Which Workflow Should I Use?",
    "content": "Use Separate Repo If: . | ‚úÖ You have multiple Unraid apps | ‚úÖ You want clean separation | ‚úÖ You follow standard Unraid developer patterns | ‚úÖ You‚Äôre okay with PAT setup | . ‚Üí Use: .github/workflows/update-unraid-template-remote.yml . Use Same Repo If: . | ‚úÖ You only have one app | ‚úÖ You want simpler setup | ‚úÖ You don‚Äôt mind template in app repo | . ‚Üí Use: .github/workflows/update-unraid-template.yml . ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#-which-workflow-should-i-use",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#-which-workflow-should-i-use"
  },"26": {
    "doc": "Separate Repo Automation",
    "title": "üéØ Recommended: Separate Repo",
    "content": "Most established Unraid developers use the separate repository pattern because: . | Scalability - Easy to add more apps | Organization - Clean separation of concerns | Community Apps - Easier for CA to track one templates repo | Best Practice - Industry standard pattern | . ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#-recommended-separate-repo",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#-recommended-separate-repo"
  },"27": {
    "doc": "Separate Repo Automation",
    "title": "‚úÖ Setup Checklist",
    "content": ". | Created PAT with repo and workflow scopes | Added PAT as secret PAT_UNRAID_TEMPLATES in TVx repo | Created/verified unraid-templates repository exists | Added workflow file to TVx repository | Updated &lt;TemplateURL&gt; in template to point to separate repo | Tested with a pre-release | Verified template updated in unraid-templates repo | Verified local template synced back (if enabled) | . ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#-setup-checklist",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#-setup-checklist"
  },"28": {
    "doc": "Separate Repo Automation",
    "title": "üéâ You‚Äôre Done!",
    "content": "Your Unraid template will now automatically update in your separate templates repository whenever you create a release! . Need Help? . | üìñ Read: docs/AUTOMATION.md | üí¨ Ask: Unraid Forum | üêõ Report: GitHub Issues | . ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html#-youre-done",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html#-youre-done"
  },"29": {
    "doc": "Separate Repo Automation",
    "title": "Separate Repo Automation",
    "content": " ",
    "url": "/TVx/development/github/AUTOMATION_SEPARATE_REPO.html",
    
    "relUrl": "/development/github/AUTOMATION_SEPARATE_REPO.html"
  },"30": {
    "doc": "Bug Fix System",
    "title": "Bug Fix Documentation System",
    "content": " ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#bug-fix-documentation-system",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#bug-fix-documentation-system"
  },"31": {
    "doc": "Bug Fix System",
    "title": "Overview",
    "content": "A standardized system for documenting significant bug fixes in TVx. This ensures knowledge is preserved and future developers can learn from past issues. ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#overview",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#overview"
  },"32": {
    "doc": "Bug Fix System",
    "title": "Structure Created",
    "content": "| 1 2 3 4 5 6 7 8 9 10 11 . | docs/ ‚îú‚îÄ‚îÄ bugfix/ ‚îÇ ‚îú‚îÄ‚îÄ README.md # Complete documentation guidelines ‚îÇ ‚îú‚îÄ‚îÄ 2025-10/ ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ vhs-video-not-playing.md # Example bug fix documentation ‚îÇ ‚îî‚îÄ‚îÄ YYYY-MM/ # Future bug fixes organized by month ‚îÇ ‚îî‚îÄ‚îÄ descriptive-name.md ‚îî‚îÄ‚îÄ development.md # Updated with bug fix documentation section .github/ ‚îî‚îÄ‚îÄ BUG_FIX_DOCUMENTATION_PROMPT.md # Template for prompting documentation . | . ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#structure-created",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#structure-created"
  },"33": {
    "doc": "Bug Fix System",
    "title": "Files Created/Modified",
    "content": "1. docs/bugfix/README.md . | Complete guidelines for bug fix documentation | Template structure for all bug fixes | When to document and when not to | Example patterns and common issues | Purpose: Central reference for all bug fix documentation | . 2. docs/bugfix/2025-10/vhs-video-not-playing.md . | Moved from root BUGFIX_VHS_VIDEO.md | Complete example of bug fix documentation | Includes investigation process, fix, testing commands | Purpose: Reference example showing best practices | . 3. docs/development.md (Updated) . | Added ‚ÄúBug Fix Documentation‚Äù section | Explains when and how to document bugs | Links to template and examples | Includes prompt text for after fixes | Purpose: Main developer guide integration | . 4.github/BUG_FIX_DOCUMENTATION_PROMPT.md . | Template for prompting bug fix documentation | Questions to ask to gather information | Docker command templates | Commit message format | Purpose: Guide for AI/reviewers to ensure documentation | . ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#files-createdmodified",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#files-createdmodified"
  },"34": {
    "doc": "Bug Fix System",
    "title": "The Process",
    "content": "After Fixing a Bug . | Evaluate if documentation is needed: . | Took &gt; 2 hours to debug? | Non-obvious root cause? | Architectural understanding required? | Could help others? | . | If yes, user is prompted: | 1 2 3 4 . | üêõ Bug Fix Complete! Would you like to create bug fix documentation? (Recommended for significant fixes) . | . | If user agrees: . | Create file in docs/bugfix/YYYY-MM/descriptive-name.md | Use template from docs/bugfix/README.md | Include all required sections | . | Required sections: . | Problem Description | Root Cause Analysis | The Fix | Testing Commands (with Docker/env vars) | Verification | Files Modified | Technical Notes | Lessons Learned | . | . ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#the-process",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#the-process"
  },"35": {
    "doc": "Bug Fix System",
    "title": "Documentation Guidelines",
    "content": "DO Document: . ‚úÖ Non-obvious bugs that took significant debugging ‚úÖ Issues revealing architectural insights ‚úÖ Problems that could recur ‚úÖ Fixes requiring special testing procedures ‚úÖ Bugs involving complex system interactions . DON‚ÄôT Document: . ‚ùå Simple typos or cosmetic fixes ‚ùå One-line obvious changes ‚ùå Trivial configuration updates ‚ùå Minor formatting issues . ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#documentation-guidelines",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#documentation-guidelines"
  },"36": {
    "doc": "Bug Fix System",
    "title": "Testing Commands",
    "content": "Always include full commands with environment variables: . | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 . | # Build docker build -t tvx:latest . # Remove old container docker rm -f tvx # Run with environment variables docker run -d --name tvx -p 8777:80 \\ -e VITE_M3U_URL=http://192.168.22.2:8000/api/channels.m3u \\ -e VITE_XMLTV_URL=http://192.168.22.2:8000/api/xmltv.xml \\ tvx:latest # Test curl -I http://localhost:8777/ # View logs docker logs -f tvx . | . ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#testing-commands",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#testing-commands"
  },"37": {
    "doc": "Bug Fix System",
    "title": "Commit Message Format",
    "content": "| 1 2 3 4 5 6 7 8 . | fix: [brief description] [Detailed explanation] Bug fix documentation: docs/bugfix/YYYY-MM/descriptive-name.md Root cause: [one sentence] Impact: [who/what was affected] . | . ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#commit-message-format",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#commit-message-format"
  },"38": {
    "doc": "Bug Fix System",
    "title": "Benefits",
    "content": ". | Knowledge Preservation: Future developers understand past issues | Faster Debugging: Similar issues solved quicker | Better Architecture: Patterns emerge from documented bugs | Team Learning: Developers learn from each other‚Äôs investigations | Quality Improvement: Understanding bugs prevents future issues | . ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#benefits",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#benefits"
  },"39": {
    "doc": "Bug Fix System",
    "title": "Example",
    "content": "See docs/bugfix/2025-10/vhs-video-not-playing.md for a complete example showing: . | Thorough investigation process | Failed attempts before finding solution | Complete testing commands with environment variables | Technical explanation of HTTP Range Requests | Lessons learned about nginx vs Node.js | . ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#example",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#example"
  },"40": {
    "doc": "Bug Fix System",
    "title": "Monthly Organization",
    "content": "Bug fixes are organized by year-month for easy navigation: . | 2025-10/ - October 2025 | 2025-11/ - November 2025 | etc. | . This keeps documentation organized and easy to find by date. ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#monthly-organization",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#monthly-organization"
  },"41": {
    "doc": "Bug Fix System",
    "title": "Common Patterns",
    "content": "As bugs are documented, common patterns will be added to docs/bugfix/README.md: . Example Pattern: Server Feature Parity . | Symptom: Feature worked with nginx, broke with Node.js | Root Cause: Missing standard server features | Prevention: Test all functionality when changing servers | Reference: 2025-10/vhs-video-not-playing.md | . ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#common-patterns",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#common-patterns"
  },"42": {
    "doc": "Bug Fix System",
    "title": "Future Enhancements",
    "content": "Potential improvements to this system: . | Automated prompts in CI/CD for significant changes | Bug fix index/search functionality | Integration with issue tracking | Automated testing checklist generation | Pattern detection across bug fixes | . ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#future-enhancements",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#future-enhancements"
  },"43": {
    "doc": "Bug Fix System",
    "title": "Quick Reference",
    "content": ". | Template: docs/bugfix/README.md | Example: docs/bugfix/2025-10/vhs-video-not-playing.md | Guidelines: docs/development.md (Bug Fix Documentation section) | Prompt Template: .github/BUG_FIX_DOCUMENTATION_PROMPT.md | . ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#quick-reference",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#quick-reference"
  },"44": {
    "doc": "Bug Fix System",
    "title": "Questions?",
    "content": "If unsure whether to document a bug fix, ask: . | Would I want this information in 6 months? | Did this teach me something important? | Could someone else hit this issue? | . When in doubt, document it! It‚Äôs better to over-document than lose valuable knowledge. ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html#questions",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html#questions"
  },"45": {
    "doc": "Bug Fix System",
    "title": "Bug Fix System",
    "content": " ",
    "url": "/TVx/development/bug%20fixes/BUG_FIX_SYSTEM.html",
    
    "relUrl": "/development/bug%20fixes/BUG_FIX_SYSTEM.html"
  },"46": {
    "doc": "Update Summary",
    "title": "Documentation Update Summary",
    "content": "Date: October 15, 2025 Branch: logging . ",
    "url": "/TVx/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#documentation-update-summary",
    
    "relUrl": "/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#documentation-update-summary"
  },"47": {
    "doc": "Update Summary",
    "title": "New Documentation Created",
    "content": "1. Bug Fix Documentation System . Location: docs/bugfix/ . Created a comprehensive system for documenting significant bug fixes: . | docs/bugfix/README.md - Complete guidelines and template for bug fix documentation | docs/bugfix/2025-10/vhs-video-not-playing.md - Documented VHS loading video bug fix | .github/BUG_FIX_DOCUMENTATION_PROMPT.md - Template for prompting documentation after fixes | docs/BUG_FIX_SYSTEM.md - Overview of the entire bug fix documentation system | . Purpose: Preserve knowledge from debugging significant issues, help future developers, prevent regressions. 2. Server Implementation Documentation . Location: docs/server-implementation.md . Comprehensive documentation of the Node.js server: . | Why we switched from nginx to Node.js (pros/cons) | Complete code explanations (logging endpoint, range requests, MIME types) | Environment configuration with envsubst | Logging system architecture (browser ‚Üí server ‚Üí Docker logs) | Testing commands and troubleshooting | Performance considerations and future improvements | . Purpose: Explain the server.js architecture, HTTP Range Request support, and logging implementation. 3. Troubleshooting Guide . Location: docs/troubleshooting.md . Complete troubleshooting guide covering: . | Channels not loading (environment variables, CORS, network) | Video not playing (HLS streams, browser compatibility) | Loading VHS video issues (with reference to bug fix) | EPG not showing (XMLTV parsing) | Docker issues (ports, rebuilds, logs) | Performance problems | Browser console errors with explanations | Quick diagnostic checklist | . Purpose: Help users quickly resolve common issues. 4. Updated Existing Documentation . Files Updated: . | docs/index.md - Reorganized with sections for Getting Started, Technical Documentation, and Resources | docs/development.md - Added comprehensive bug fix documentation section with template and process | docs/usage.md - Updated sample log output with actual Docker log entries | README.md - Reorganized documentation links with better categorization | . ",
    "url": "/TVx/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#new-documentation-created",
    
    "relUrl": "/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#new-documentation-created"
  },"48": {
    "doc": "Update Summary",
    "title": "Documentation Structure",
    "content": "| 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 . | docs/ ‚îú‚îÄ‚îÄ index.md # Documentation hub with organized links ‚îú‚îÄ‚îÄ installation.md # Existing installation guide ‚îú‚îÄ‚îÄ usage.md # Updated with real log samples ‚îú‚îÄ‚îÄ development.md # Updated with bug fix documentation process ‚îú‚îÄ‚îÄ troubleshooting.md # NEW - Comprehensive troubleshooting ‚îú‚îÄ‚îÄ server-implementation.md # NEW - Server.js architecture ‚îú‚îÄ‚îÄ BUG_FIX_SYSTEM.md # NEW - Bug fix system overview ‚îú‚îÄ‚îÄ bugfix/ # NEW - Bug fix documentation directory ‚îÇ ‚îú‚îÄ‚îÄ README.md # Bug fix guidelines and template ‚îÇ ‚îî‚îÄ‚îÄ 2025-10/ # Monthly organization ‚îÇ ‚îî‚îÄ‚îÄ vhs-video-not-playing.md # Example bug fix documentation ‚îî‚îÄ‚îÄ Screenshots/ # Existing screenshots .github/ ‚îî‚îÄ‚îÄ BUG_FIX_DOCUMENTATION_PROMPT.md # NEW - Prompt template for bug fixes README.md # Updated with better doc organization . | . ",
    "url": "/TVx/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#documentation-structure",
    
    "relUrl": "/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#documentation-structure"
  },"49": {
    "doc": "Update Summary",
    "title": "Key Features of Bug Fix Documentation System",
    "content": "1. Monthly Organization . Bug fixes organized by YYYY-MM/ folders for easy chronological navigation. 2. Comprehensive Template . Each bug fix document includes: . | Problem Description | Root Cause Analysis (step-by-step) | The Fix (code with reasoning) | Testing Commands (Docker builds with env vars) | Verification steps | Files Modified | Technical Notes (why it occurred) | Lessons Learned | Future Improvements | . 3. Pattern Tracking . Common bug patterns documented in docs/bugfix/README.md: . | Server Feature Parity (nginx ‚Üí Node.js issues) | Future patterns will be added as they emerge | . 4. Process Integration . Added to docs/development.md: . | When to document bug fixes | How to create documentation | Complete template reference | Example bug fix link | . ",
    "url": "/TVx/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#key-features-of-bug-fix-documentation-system",
    
    "relUrl": "/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#key-features-of-bug-fix-documentation-system"
  },"50": {
    "doc": "Update Summary",
    "title": "Usage Examples",
    "content": "Viewing Bug Fix Documentation . | 1 2 3 4 5 6 7 8 . | # View all bug fixes ls docs/bugfix/ # View specific bug fix cat docs/bugfix/2025-10/vhs-video-not-playing.md # View guidelines cat docs/bugfix/README.md . | . Creating New Bug Fix Documentation . | Create month directory if needed: docs/bugfix/YYYY-MM/ | Create new file: docs/bugfix/YYYY-MM/descriptive-name.md | Use template from docs/bugfix/README.md | Include all testing commands with environment variables | Document lessons learned | . Accessing Documentation . GitHub: . | Main README links to all documentation | docs/index.md serves as documentation hub | Can be hosted on GitHub Pages | . Local: . | 1 2 3 4 5 6 7 8 . | # View documentation index cat docs/index.md # View server implementation cat docs/server-implementation.md # View troubleshooting cat docs/troubleshooting.md . | . ",
    "url": "/TVx/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#usage-examples",
    
    "relUrl": "/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#usage-examples"
  },"51": {
    "doc": "Update Summary",
    "title": "Benefits",
    "content": "1. Knowledge Preservation . | Debugging insights preserved for future reference | Understanding why bugs occurred prevents recurrence | New developers learn from past issues | . 2. Faster Debugging . | Similar issues resolved quicker with documented solutions | Testing commands readily available | Common patterns identified | . 3. Better Code Quality . | Understanding root causes improves architecture | Lessons learned inform future development | Prevention strategies documented | . 4. Team Communication . | Documented investigations help async collaboration | Clear explanations of technical decisions | Shared learning across team members | . ",
    "url": "/TVx/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#benefits",
    
    "relUrl": "/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#benefits"
  },"52": {
    "doc": "Update Summary",
    "title": "Real-World Example",
    "content": "VHS Video Not Playing Bug Fix . File: docs/bugfix/2025-10/vhs-video-not-playing.md . Problem: Loading VHS video stopped playing after switching from nginx to Node.js server . Root Cause: Missing HTTP Range Request support (RFC 7233) . Documentation Includes: . | Complete investigation process | Why nginx worked but Node.js didn‚Äôt | Code changes to implement range requests | Testing commands with Docker and environment variables | Technical explanation of range requests | Lessons about server feature parity | . Impact: Future developers will immediately know to implement range request support when building custom servers. ",
    "url": "/TVx/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#real-world-example",
    
    "relUrl": "/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#real-world-example"
  },"53": {
    "doc": "Update Summary",
    "title": "Future Enhancements",
    "content": "Potential Additions . | Automated bug fix index generation | Search functionality across bug fixes | Integration with CI/CD for prompting documentation | Pattern detection and alerts | Metrics on common bug types | . Process Improvements . | Template refinement based on usage | Additional example bug fixes | Video tutorials for creating documentation | Automated testing checklist generation | . ",
    "url": "/TVx/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#future-enhancements",
    
    "relUrl": "/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#future-enhancements"
  },"54": {
    "doc": "Update Summary",
    "title": "Documentation Standards",
    "content": "All Documentation Should: . | ‚úÖ Be clear and concise | ‚úÖ Include code examples | ‚úÖ Provide testing commands | ‚úÖ Reference related files | ‚úÖ Explain the ‚Äúwhy‚Äù not just ‚Äúwhat‚Äù | . Bug Fix Documentation Must: . | ‚úÖ Include complete testing commands with environment variables | ‚úÖ Show step-by-step investigation | ‚úÖ Document lessons learned | ‚úÖ Reference related commits | ‚úÖ Explain technical background | . ",
    "url": "/TVx/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#documentation-standards",
    
    "relUrl": "/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#documentation-standards"
  },"55": {
    "doc": "Update Summary",
    "title": "Maintenance",
    "content": "Regular Tasks . | Review and update troubleshooting guide as issues arise | Add new bug patterns to docs/bugfix/README.md | Update server implementation docs when features change | Keep documentation index up to date | . Monthly Review . | Check bug fix documentation for common patterns | Update templates based on feedback | Consolidate similar issues | Archive outdated documentation | . ",
    "url": "/TVx/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#maintenance",
    
    "relUrl": "/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#maintenance"
  },"56": {
    "doc": "Update Summary",
    "title": "Questions or Improvements?",
    "content": "If you have suggestions for improving the documentation system: . | Open an issue describing the improvement | Submit a PR with proposed changes | Discuss in team meetings | . Documentation is a living system - keep it updated! . ",
    "url": "/TVx/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#questions-or-improvements",
    
    "relUrl": "/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html#questions-or-improvements"
  },"57": {
    "doc": "Update Summary",
    "title": "Update Summary",
    "content": " ",
    "url": "/TVx/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html",
    
    "relUrl": "/development/documentation%20dev/DOCUMENTATION_UPDATE_SUMMARY.html"
  },"58": {
    "doc": "Theme & Search",
    "title": "Just the Docs Theme &amp; Search Setup",
    "content": " ",
    "url": "/TVx/development/documentation%20dev/THEME_SETUP.html#just-the-docs-theme--search-setup",
    
    "relUrl": "/development/documentation%20dev/THEME_SETUP.html#just-the-docs-theme--search-setup"
  },"59": {
    "doc": "Theme & Search",
    "title": "Table of contents",
    "content": ". | Theme Overview . | Why Just the Docs? | . | Search Functionality . | Built-in Search (Default) | Search Configuration | Alternative Search Options . | 1. Algolia DocSearch (Recommended for Popular Projects) | 2. Lunr.js (Just the Docs Default) | 3. Custom Google Search | . | . | Navigation Structure . | Current Navigation Order: | . | Customization Options . | Color Schemes | Custom Color Scheme | Logo | Aux Links (Top Right) | . | Page Layout Options . | Home Layout | Default Layout | No Nav Pages | . | Advanced Features . | Callouts | Code Blocks with Line Numbers | Table of Contents | Buttons | . | Local Development . | Start Server | Live Reload | Build Site | . | Deployment . | GitHub Pages | Custom Domain | . | Troubleshooting . | Search not working | Sidebar not showing | Theme not loading | . | Resources | . ",
    "url": "/TVx/development/documentation%20dev/THEME_SETUP.html#table-of-contents",
    
    "relUrl": "/development/documentation%20dev/THEME_SETUP.html#table-of-contents"
  },"60": {
    "doc": "Theme & Search",
    "title": "Theme Overview",
    "content": "TVx documentation now uses Just the Docs, a modern, highly customizable Jekyll theme with powerful built-in search functionality. Why Just the Docs? . | üîç Built-in Search - Fast, client-side search with previews | üé® Dark Mode - Beautiful dark color scheme by default | üì± Responsive - Works perfectly on all devices | üöÄ Fast - Optimized for performance | üéØ Navigation - Auto-generated sidebar from front matter | üîó Anchor Links - Every heading gets an anchor | üìù Clean Typography - Excellent readability | . ",
    "url": "/TVx/development/documentation%20dev/THEME_SETUP.html#theme-overview",
    
    "relUrl": "/development/documentation%20dev/THEME_SETUP.html#theme-overview"
  },"61": {
    "doc": "Theme & Search",
    "title": "Search Functionality",
    "content": "Built-in Search (Default) . Just the Docs includes a powerful search feature that‚Äôs: . | Client-side - No server required, works on GitHub Pages | Fast - Instant results as you type | Smart - Searches headings, content, and page titles | Preview - Shows context around matches | Configurable - Customize behavior in _config.yml | . Search Configuration . Current settings in _config.yml: . | 1 2 3 4 5 6 7 8 9 . | search_enabled: true search: heading_level: 2 # Include h2 headings in search previews: 3 # Show 3 preview snippets per result preview_words_before: 5 # Words before match in preview preview_words_after: 10 # Words after match in preview tokenizer_separator: /[\\s/]+/ rel_url: true button: true . | . Alternative Search Options . If you need more advanced search, here are three excellent options: . 1. Algolia DocSearch (Recommended for Popular Projects) . Pros: . | üöÄ Ultra-fast, hosted search | üé® Beautiful UI with keyboard shortcuts | üîÑ Auto-indexes your site | üí∞ Free for open-source documentation | . Setup: . | 1 2 3 4 5 6 7 8 . | # _config.yml plugins: - jekyll-algolia algolia: application_id: YOUR_APP_ID index_name: YOUR_INDEX_NAME search_only_api_key: YOUR_SEARCH_KEY . | . Apply: https://docsearch.algolia.com/apply/ . 2. Lunr.js (Just the Docs Default) . Pros: . | ‚úÖ Already integrated in Just the Docs | üì¶ No external dependencies | üîí Privacy-friendly (no tracking) | üíª Works offline | . Cons: . | Limited to smaller sites (&lt; 500 pages) | Basic relevance ranking | . This is what we‚Äôre currently using! No additional setup needed. 3. Custom Google Search . Pros: . | üîç Leverages Google‚Äôs powerful search | üìä Search analytics | üé® Customizable appearance | . Setup: . | Create a Custom Search Engine at cse.google.com | Add this to your layout: | . | 1 2 . | &lt;script async src=\"https://cse.google.com/cse.js?cx=YOUR_CX_ID\"&gt;&lt;/script&gt; &lt;div class=\"gcse-search\"&gt;&lt;/div&gt; . | . ",
    "url": "/TVx/development/documentation%20dev/THEME_SETUP.html#search-functionality",
    
    "relUrl": "/development/documentation%20dev/THEME_SETUP.html#search-functionality"
  },"62": {
    "doc": "Theme & Search",
    "title": "Navigation Structure",
    "content": "Pages are ordered using nav_order in front matter: . | 1 2 3 4 5 . | --- layout: default title: Page Title nav_order: 1 # Lower numbers appear first --- . | . Current Navigation Order: . | Home (Landing Page) | Installation | Usage | Troubleshooting | Development | Server Implementation | Bug Fix System | Bug Fix Documentation | . ",
    "url": "/TVx/development/documentation%20dev/THEME_SETUP.html#navigation-structure",
    
    "relUrl": "/development/documentation%20dev/THEME_SETUP.html#navigation-structure"
  },"63": {
    "doc": "Theme & Search",
    "title": "Customization Options",
    "content": "Color Schemes . Available built-in schemes: . | dark (current) | light | custom (define your own) | . Change in _config.yml: . | 1 . | color_scheme: dark . | . Custom Color Scheme . Create _sass/color_schemes/tvx.scss: . | 1 2 3 4 5 . | $body-background-color: #1a1a1a; $sidebar-color: #2d2d2d; $link-color: #b5e853; $btn-primary-color: #b5e853; $base-button-color: #f3f3f3; . | . Then use it: . | 1 . | color_scheme: tvx . | . Logo . Add your logo to _config.yml: . | 1 . | logo: \"/assets/images/tvx-logo.png\" . | . Aux Links (Top Right) . Currently configured: . | 1 2 3 4 5 . | aux_links: \"GitHub\": - \"//github.com/dopeytree/TVx\" \"Sponsor ‚ù§Ô∏è\": - \"//github.com/sponsors/dopeytree\" . | . ",
    "url": "/TVx/development/documentation%20dev/THEME_SETUP.html#customization-options",
    
    "relUrl": "/development/documentation%20dev/THEME_SETUP.html#customization-options"
  },"64": {
    "doc": "Theme & Search",
    "title": "Page Layout Options",
    "content": "Home Layout . Landing pages use layout: home: . | 1 2 3 4 5 6 7 . | --- layout: default title: Home nav_order: 1 description: \"Your description\" permalink: / --- . | . Default Layout . Standard documentation pages: . | 1 2 3 4 5 . | --- layout: default title: Page Title nav_order: 2 --- . | . No Nav Pages . Exclude from navigation: . | 1 2 3 4 5 . | --- layout: default title: Hidden Page nav_exclude: true --- . | . ",
    "url": "/TVx/development/documentation%20dev/THEME_SETUP.html#page-layout-options",
    
    "relUrl": "/development/documentation%20dev/THEME_SETUP.html#page-layout-options"
  },"65": {
    "doc": "Theme & Search",
    "title": "Advanced Features",
    "content": "Callouts . Create attention-grabbing blocks: . | 1 2 3 4 5 6 7 8 . | {: .note } &gt; This is a note callout {: .warning } &gt; This is a warning callout {: .important } &gt; This is an important callout . | . Code Blocks with Line Numbers . | 1 2 3 4 . | kramdown: syntax_highlighter_opts: block: line_numbers: true . | . Table of Contents . Auto-generate TOC for any page: . | 1 2 3 4 5 . | ## {: .no_toc .text-delta } 1. TOC {:toc} . | . Buttons . | 1 2 . | [Get Started](installation.md){: .btn .btn-primary } [View on GitHub](https://github.com){: .btn } . | . ",
    "url": "/TVx/development/documentation%20dev/THEME_SETUP.html#advanced-features",
    
    "relUrl": "/development/documentation%20dev/THEME_SETUP.html#advanced-features"
  },"66": {
    "doc": "Theme & Search",
    "title": "Local Development",
    "content": "Start Server . | 1 2 3 . | cd docs bundle install jekyll serve --host 0.0.0.0 --port 4000 --baseurl /TVx . | . Visit: http://localhost:4000/TVx/ . Live Reload . Changes to markdown files auto-reload. Restart for _config.yml changes. Build Site . | 1 . | bundle exec jekyll build . | . Output in _site/ directory. ",
    "url": "/TVx/development/documentation%20dev/THEME_SETUP.html#local-development",
    
    "relUrl": "/development/documentation%20dev/THEME_SETUP.html#local-development"
  },"67": {
    "doc": "Theme & Search",
    "title": "Deployment",
    "content": "GitHub Pages . | Push changes to your branch | GitHub Actions automatically builds with Just the Docs | Site live at: https://dopeytree.github.io/TVx/ | . Custom Domain . Add CNAME file to /docs: . | 1 . | docs.tvx.example.com . | . Then configure DNS: . | 1 . | CNAME docs -&gt; dopeytree.github.io . | . ",
    "url": "/TVx/development/documentation%20dev/THEME_SETUP.html#deployment",
    
    "relUrl": "/development/documentation%20dev/THEME_SETUP.html#deployment"
  },"68": {
    "doc": "Theme & Search",
    "title": "Troubleshooting",
    "content": "Search not working . | Check search_enabled: true in _config.yml | Rebuild site: bundle exec jekyll build | Clear browser cache | . Sidebar not showing . | Verify nav_order in front matter | Check layout is default or home | Ensure page is not nav_exclude: true | . Theme not loading . | Verify remote_theme: just-the-docs/just-the-docs | Run bundle install | Check GitHub Pages build status | . ",
    "url": "/TVx/development/documentation%20dev/THEME_SETUP.html#troubleshooting",
    
    "relUrl": "/development/documentation%20dev/THEME_SETUP.html#troubleshooting"
  },"69": {
    "doc": "Theme & Search",
    "title": "Resources",
    "content": ". | Just the Docs Documentation | Customization Guide | Navigation Structure | Search Configuration | Algolia DocSearch | . ",
    "url": "/TVx/development/documentation%20dev/THEME_SETUP.html#resources",
    
    "relUrl": "/development/documentation%20dev/THEME_SETUP.html#resources"
  },"70": {
    "doc": "Theme & Search",
    "title": "Theme & Search",
    "content": " ",
    "url": "/TVx/development/documentation%20dev/THEME_SETUP.html",
    
    "relUrl": "/development/documentation%20dev/THEME_SETUP.html"
  },"71": {
    "doc": "Theme Colors",
    "title": "TVx Custom Theme",
    "content": " ",
    "url": "/TVx/development/documentation%20dev/TVX_THEME.html#tvx-custom-theme",
    
    "relUrl": "/development/documentation%20dev/TVX_THEME.html#tvx-custom-theme"
  },"72": {
    "doc": "Theme Colors",
    "title": "Overview",
    "content": "The TVx documentation now uses a custom color scheme inspired by the TeXt Jekyll Theme, featuring: . | Modern, Clean Design - Light background with vibrant blue accents | Excellent Readability - High contrast, comfortable typography | Professional Look - Polished UI elements and smooth interactions | Warm Blues - Primary color #3498db (vibrant blue) | . ",
    "url": "/TVx/development/documentation%20dev/TVX_THEME.html#overview",
    
    "relUrl": "/development/documentation%20dev/TVX_THEME.html#overview"
  },"73": {
    "doc": "Theme Colors",
    "title": "Color Palette",
    "content": "Primary Colors . | Color | Hex | Usage | . | Accent Blue | #3498db | Links, buttons, active states | . | Accent Blue (Hover) | #2980b9 | Hover effects | . | Heading Gray | #2c3e50 | Headings, important text | . | Body Text | #333333 | Main content text | . | Background | #ffffff | Page background | . | Sidebar | #f8f9fa | Sidebar background | . Accent Colors . | Color | Hex | Usage | . | Light Blue | #e3f2fd | Highlights, info boxes, table hover | . | Blue 100 | #bbdefb | Subtle backgrounds | . | Blue 200 | #90caf9 | Medium highlights | . | Border Gray | #e1e4e8 | Borders, separators | . Feedback Colors . | Color | Hex | Usage | . | Success Green | #66bb6a | Success messages | . | Warning Yellow | #ffd54f | Warning callouts | . | Error Red | #e57373 | Error messages | . ",
    "url": "/TVx/development/documentation%20dev/TVX_THEME.html#color-palette",
    
    "relUrl": "/development/documentation%20dev/TVX_THEME.html#color-palette"
  },"74": {
    "doc": "Theme Colors",
    "title": "Features",
    "content": "1. Modern Navigation . | Clean sidebar with hover effects | Active page highlighting with blue border | Smooth transitions | . 2. Beautiful Code Blocks . | Rounded corners (6px border-radius) | Light gray background #f6f8fa | Subtle border | Line numbers enabled | . 3. Enhanced Tables . | Light blue header background | Blue accent border on header | Hover effects on rows | Clean borders | . 4. Callout Boxes . Three types of callouts with colored left borders: . Note (Blue) . | 1 2 . | {: .note } &gt; This is an informational note . | . Warning (Yellow) . | 1 2 . | {: .warning } &gt; This is a warning message . | . Important (Red) . | 1 2 . | {: .important } &gt; This is critical information . | . 5. Modern Buttons . | Vibrant blue primary button | Smooth hover effects with shadow | Clean, rounded appearance | . 6. Improved Typography . | Consistent heading hierarchy | H1 and H2 with bottom borders | Comfortable line spacing | Professional font stack | . ",
    "url": "/TVx/development/documentation%20dev/TVX_THEME.html#features",
    
    "relUrl": "/development/documentation%20dev/TVX_THEME.html#features"
  },"75": {
    "doc": "Theme Colors",
    "title": "Customization",
    "content": "Change Primary Color . Edit /docs/_sass/color_schemes/tvx.scss: . | 1 2 3 . | $accent-color: #3498db; // Change this to your preferred color $link-color: #3498db; // Keep consistent $btn-primary-color: #3498db; . | . Adjust Sidebar . Edit /docs/_sass/custom/custom.scss: . | 1 2 3 4 . | .side-bar { background-color: #f8f9fa; // Change sidebar background border-right: 1px solid #e1e4e8; } . | . Modify Code Blocks . | 1 2 3 4 5 6 7 8 . | pre { border-radius: 6px; // Adjust corner roundness border: 1px solid #e1e4e8; code { background-color: #f6f8fa; // Change code background } } . | . ",
    "url": "/TVx/development/documentation%20dev/TVX_THEME.html#customization",
    
    "relUrl": "/development/documentation%20dev/TVX_THEME.html#customization"
  },"76": {
    "doc": "Theme Colors",
    "title": "File Structure",
    "content": "| 1 2 3 4 5 6 7 . | docs/ ‚îú‚îÄ‚îÄ _sass/ ‚îÇ ‚îú‚îÄ‚îÄ color_schemes/ ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ tvx.scss # Color variable definitions ‚îÇ ‚îî‚îÄ‚îÄ custom/ ‚îÇ ‚îî‚îÄ‚îÄ custom.scss # Custom styling overrides ‚îî‚îÄ‚îÄ _config.yml # Theme configuration . | . ",
    "url": "/TVx/development/documentation%20dev/TVX_THEME.html#file-structure",
    
    "relUrl": "/development/documentation%20dev/TVX_THEME.html#file-structure"
  },"77": {
    "doc": "Theme Colors",
    "title": "Switching Back to Dark Mode",
    "content": "If you prefer the dark theme: . Edit _config.yml: . | 1 . | color_scheme: dark . | . Then restart Jekyll. ",
    "url": "/TVx/development/documentation%20dev/TVX_THEME.html#switching-back-to-dark-mode",
    
    "relUrl": "/development/documentation%20dev/TVX_THEME.html#switching-back-to-dark-mode"
  },"78": {
    "doc": "Theme Colors",
    "title": "Creating Additional Color Schemes",
    "content": ". | Create new file: _sass/color_schemes/myscheme.scss | Define your colors using Just the Docs variables | Update _config.yml: color_scheme: myscheme | Restart Jekyll | . ",
    "url": "/TVx/development/documentation%20dev/TVX_THEME.html#creating-additional-color-schemes",
    
    "relUrl": "/development/documentation%20dev/TVX_THEME.html#creating-additional-color-schemes"
  },"79": {
    "doc": "Theme Colors",
    "title": "Comparison with TeXt Theme",
    "content": "| Feature | TeXt Theme | TVx Theme | . | Primary Color | Blue | Vibrant Blue #3498db | . | Layout | Multi-layout | Documentation-focused | . | Navigation | Top nav + sidebar | Sidebar only | . | Search | Algolia optional | Built-in Lunr.js | . | Code Blocks | Syntax highlighting | + Line numbers | . | Callouts | Native support | Custom CSS classes | . ",
    "url": "/TVx/development/documentation%20dev/TVX_THEME.html#comparison-with-text-theme",
    
    "relUrl": "/development/documentation%20dev/TVX_THEME.html#comparison-with-text-theme"
  },"80": {
    "doc": "Theme Colors",
    "title": "Performance",
    "content": ". | Load Time: Fast (static site) | Search: Instant (client-side) | Responsiveness: Full mobile support | Accessibility: WCAG compliant | . ",
    "url": "/TVx/development/documentation%20dev/TVX_THEME.html#performance",
    
    "relUrl": "/development/documentation%20dev/TVX_THEME.html#performance"
  },"81": {
    "doc": "Theme Colors",
    "title": "Browser Support",
    "content": ". | ‚úÖ Chrome/Edge (latest) | ‚úÖ Firefox (latest) | ‚úÖ Safari (latest) | ‚úÖ Mobile browsers | . ",
    "url": "/TVx/development/documentation%20dev/TVX_THEME.html#browser-support",
    
    "relUrl": "/development/documentation%20dev/TVX_THEME.html#browser-support"
  },"82": {
    "doc": "Theme Colors",
    "title": "Resources",
    "content": ". | Just the Docs Documentation | TeXt Theme | Color Customization Guide | . ",
    "url": "/TVx/development/documentation%20dev/TVX_THEME.html#resources",
    
    "relUrl": "/development/documentation%20dev/TVX_THEME.html#resources"
  },"83": {
    "doc": "Theme Colors",
    "title": "Theme Colors",
    "content": " ",
    "url": "/TVx/development/documentation%20dev/TVX_THEME.html",
    
    "relUrl": "/development/documentation%20dev/TVX_THEME.html"
  },"84": {
    "doc": "Browser Console Errors",
    "title": "Browser Console Errors",
    "content": " ",
    "url": "/TVx/manual/troubleshooting/browser/browser-console-errors.html",
    
    "relUrl": "/manual/troubleshooting/browser/browser-console-errors.html"
  },"85": {
    "doc": "Browser Console Errors",
    "title": "Common errors and solutions:",
    "content": "‚ÄúCORS policy: No ‚ÄòAccess-Control-Allow-Origin‚Äô header‚Äù . | Tunarr needs CORS enabled | Check Tunarr settings/configuration | May need reverse proxy configuration | . ‚ÄúNotSupportedError: The operation is not supported‚Äù . | Usually video-related | Check HTTP Range Request support | See docs/bugfix/2025-10/vhs-video-not-playing.md | . ‚ÄúFailed to fetch‚Äù . | Network connectivity issue | Check Tunarr URL is correct | Verify Tunarr is running | . ",
    "url": "/TVx/manual/troubleshooting/browser/browser-console-errors.html#common-errors-and-solutions",
    
    "relUrl": "/manual/troubleshooting/browser/browser-console-errors.html#common-errors-and-solutions"
  },"86": {
    "doc": "Browser Support",
    "title": "Browser Support",
    "content": "Works best in modern browsers with WebGL support: . | ‚úÖ Chrome/Edge 90+ | ‚ö†Ô∏è Firefox 88+ | ‚úÖ Safari 14+ | . ",
    "url": "/TVx/manual/browser-support.html",
    
    "relUrl": "/manual/browser-support.html"
  },"87": {
    "doc": "Browser Support",
    "title": "Troubleshooting",
    "content": "Channels not loading . | Check that your M3U and XMLTV URLs are correct | Ensure Tunarr is running and accessible | Clear browser cache (Ctrl+Shift+R) | . Video not playing . | Verify HLS streams are working in Tunarr | Check browser console for errors | Try a different browser | . EPG not showing . | Confirm XMLTV URL is valid | Check that XMLTV file contains program data | Refresh the page | . ",
    "url": "/TVx/manual/browser-support.html#troubleshooting",
    
    "relUrl": "/manual/browser-support.html#troubleshooting"
  },"88": {
    "doc": "Channels Not Loading",
    "title": "Channels Not Loading",
    "content": " ",
    "url": "/TVx/manual/troubleshooting/channels/channels-not-loading.html",
    
    "relUrl": "/manual/troubleshooting/channels/channels-not-loading.html"
  },"89": {
    "doc": "Channels Not Loading",
    "title": "Issue: No channels appear after starting TVx",
    "content": "Symptoms: . | Empty channel list | No error messages | Blank screen | . Solutions: . | Check environment variables: | 1 2 . | # Verify URLs are set correctly docker exec tvx env | grep VITE . | . Should show: . | 1 2 . | VITE_M3U_URL=http://your-server:8000/api/channels.m3u VITE_XMLTV_URL=http://your-server:8000/api/xmltv.xml . | . | Verify Tunarr is accessible: | 1 . | curl -I http://your-tunarr-ip:8000/api/channels.m3u . | . Should return 200 OK . | Check browser console (F12): . | Look for CORS errors | Check network tab for failed requests | Verify env.js is loaded | . | Hard refresh browser: . | Chrome/Edge: Ctrl+Shift+R (Windows) or Cmd+Shift+R (Mac) | Firefox: Ctrl+F5 (Windows) or Cmd+Shift+R (Mac) | . | . ",
    "url": "/TVx/manual/troubleshooting/channels/channels-not-loading.html#issue-no-channels-appear-after-starting-tvx",
    
    "relUrl": "/manual/troubleshooting/channels/channels-not-loading.html#issue-no-channels-appear-after-starting-tvx"
  },"90": {
    "doc": "Contributing",
    "title": "Development",
    "content": " ",
    "url": "/TVx/development/development.html#development",
    
    "relUrl": "/development/development.html#development"
  },"91": {
    "doc": "Contributing",
    "title": "Prerequisites",
    "content": ". | Node.js 18+ | npm or yarn | Git | . ",
    "url": "/TVx/development/development.html#prerequisites",
    
    "relUrl": "/development/development.html#prerequisites"
  },"92": {
    "doc": "Contributing",
    "title": "Setup",
    "content": ". | Clone the repository: . | 1 2 . | git clone https://github.com/dopeytree/TVx.git cd TVx . | . | Install dependencies: . | 1 . | npm install . | . | Set environment variables (create .env file): . | 1 2 . | VITE_M3U_URL=http://your-tunarr-ip:8000/api/channels.m3u VITE_XMLTV_URL=http://your-tunarr-ip:8000/api/xmltv.xml . | . | Start development server: . | 1 . | npm run dev . | . | . Open http://localhost:5173 . ",
    "url": "/TVx/development/development.html#setup",
    
    "relUrl": "/development/development.html#setup"
  },"93": {
    "doc": "Contributing",
    "title": "Build",
    "content": "| 1 . | npm run build . | . ",
    "url": "/TVx/development/development.html#build",
    
    "relUrl": "/development/development.html#build"
  },"94": {
    "doc": "Contributing",
    "title": "Tech Stack",
    "content": ". | React 18 with TypeScript | Vite for build tooling | Tailwind CSS for styling | Radix UI for accessible components | HLS.js for video streaming | WebGL shaders for CRT effects | . ",
    "url": "/TVx/development/development.html#tech-stack",
    
    "relUrl": "/development/development.html#tech-stack"
  },"95": {
    "doc": "Contributing",
    "title": "Project Structure",
    "content": "| 1 2 3 4 5 6 7 8 9 10 11 12 . | src/ ‚îú‚îÄ‚îÄ components/ # React components ‚îÇ ‚îú‚îÄ‚îÄ ui/ # Reusable UI components ‚îÇ ‚îú‚îÄ‚îÄ ChannelList.tsx # Channel list component ‚îÇ ‚îú‚îÄ‚îÄ EPGView.tsx # Electronic Program Guide ‚îÇ ‚îú‚îÄ‚îÄ VideoPlayer.tsx # Main video player ‚îÇ ‚îî‚îÄ‚îÄ ... ‚îú‚îÄ‚îÄ hooks/ # Custom React hooks ‚îú‚îÄ‚îÄ lib/ # Utilities ‚îú‚îÄ‚îÄ pages/ # Page components ‚îú‚îÄ‚îÄ types/ # TypeScript type definitions ‚îî‚îÄ‚îÄ utils/ # Helper functions . | . ",
    "url": "/TVx/development/development.html#project-structure",
    
    "relUrl": "/development/development.html#project-structure"
  },"96": {
    "doc": "Contributing",
    "title": "Key Components",
    "content": "VideoPlayer . Handles HLS video streaming with custom WebGL effects for CRT simulation. EPGView . Displays the electronic program guide with timeline and channel grid. ChannelList . Manages channel navigation and metadata display. ",
    "url": "/TVx/development/development.html#key-components",
    
    "relUrl": "/development/development.html#key-components"
  },"97": {
    "doc": "Contributing",
    "title": "Contributing",
    "content": ". | Fork the repository | Create a feature branch: git checkout -b feature/your-feature | Make your changes | Test thoroughly | Submit a pull request | . ",
    "url": "/TVx/development/development.html",
    
    "relUrl": "/development/development.html"
  },"98": {
    "doc": "Contributing",
    "title": "Bug Fix Documentation",
    "content": "When you fix a significant bug, create documentation following these guidelines: . When to Document a Bug Fix . Document bug fixes that are: . | ‚úÖ Non-obvious - Took significant time to debug | ‚úÖ Architectural - Reveals system behavior or design issues | ‚úÖ Impactful - Significantly affected functionality | ‚úÖ Educational - Other developers can learn from it | . Bug Fix Documentation Process . After fixing a major bug, you will be prompted to create documentation: . | 1 . | üêõ Bug fixed! Would you like to create bug fix documentation? (Recommended for significant fixes) . | . If yes: . | Create a new file in docs/bugfix/YYYY-MM/descriptive-name.md | Use the template from docs/bugfix/README.md | Include all of the following: . | Problem Description: What wasn‚Äôt working? | Root Cause Analysis: Step-by-step investigation | The Fix: Code changes and reasoning | Testing Commands: Exact commands including Docker builds with environment variables | Verification: How to confirm the fix works | Files Modified: List of changed files | Technical Notes: Deep explanation of why the bug occurred | Lessons Learned: Key takeaways and prevention strategies | . | . Example Documentation Structure . | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 . | # Bug Fix: Loading VHS Video Not Playing **Date:** 2025-10-15 **Branch:** logging **Issue:** Loading video not playing after switching to Node.js server ## Problem Description [What wasn't working...] ## Root Cause Analysis [Step-by-step investigation...] ## The Fix [Code changes...] ## Testing Commands ```bash # Build with environment variables docker build -t tvx:latest . docker run -d --name tvx -p 8777:80 \\ -e VITE_M3U_URL=http://192.168.22.2:8000/api/channels.m3u \\ -e VITE_XMLTV_URL=http://192.168.22.2:8000/api/xmltv.xml \\ tvx:latest . | . ",
    "url": "/TVx/development/development.html#bug-fix-documentation",
    
    "relUrl": "/development/development.html#bug-fix-documentation"
  },"99": {
    "doc": "Contributing",
    "title": "Verification",
    "content": "[How to confirm the fix‚Ä¶] . ",
    "url": "/TVx/development/development.html#verification",
    
    "relUrl": "/development/development.html#verification"
  },"100": {
    "doc": "Contributing",
    "title": "Lessons Learned",
    "content": "[Key takeaways‚Ä¶] ``` . Complete Template . See docs/bugfix/README.md for the complete template and examples. Example Bug Fix Documentation . See docs/bugfix/2025-10/vhs-video-not-playing.md for a full example showing: . | Thorough investigation process | All testing commands with environment variables | Technical explanation of HTTP Range Requests | Lessons learned about server implementations | . ",
    "url": "/TVx/development/development.html#lessons-learned",
    
    "relUrl": "/development/development.html#lessons-learned"
  },"101": {
    "doc": "Contributing",
    "title": "Code Style",
    "content": ". | Use TypeScript for all new code | Follow React best practices | Use Tailwind CSS classes for styling | Run npm run lint before committing | . ",
    "url": "/TVx/development/development.html#code-style",
    
    "relUrl": "/development/development.html#code-style"
  },"102": {
    "doc": "Contributing",
    "title": "Testing",
    "content": "Currently no automated tests are set up. Manual testing is required for all changes. ",
    "url": "/TVx/development/development.html#testing",
    
    "relUrl": "/development/development.html#testing"
  },"103": {
    "doc": "Contributing",
    "title": "Deployment",
    "content": "The app is containerized using Docker. See the main README for deployment instructions. ",
    "url": "/TVx/development/development.html#deployment",
    
    "relUrl": "/development/development.html#deployment"
  },"104": {
    "doc": "Contributing",
    "title": "License",
    "content": "PolyForm Noncommercial 1.0.0 - See LICENSE file for details. ",
    "url": "/TVx/development/development.html#license",
    
    "relUrl": "/development/development.html#license"
  },"105": {
    "doc": "Docker Issues",
    "title": "Docker Issues",
    "content": " ",
    "url": "/TVx/manual/troubleshooting/docker/docker-issues.html",
    
    "relUrl": "/manual/troubleshooting/docker/docker-issues.html"
  },"106": {
    "doc": "Docker Issues",
    "title": "Issue: Container won‚Äôt start",
    "content": "Symptoms: . | docker ps doesn‚Äôt show tvx | Container exits immediately | Port already in use | . Solutions: . | Check port availability: | 1 . | lsof -i :8777 . | . If occupied, stop the process or use different port . | Check container logs: | 1 . | docker logs tvx . | . | Remove and recreate: | 1 2 3 4 5 . | docker rm -f tvx docker run -d --name tvx -p 8777:80 \\ -e VITE_M3U_URL=http://your-server:8000/api/channels.m3u \\ -e VITE_XMLTV_URL=http://your-server:8000/api/xmltv.xml \\ tvx:latest . | . | . ",
    "url": "/TVx/manual/troubleshooting/docker/docker-issues.html#issue-container-wont-start",
    
    "relUrl": "/manual/troubleshooting/docker/docker-issues.html#issue-container-wont-start"
  },"107": {
    "doc": "Docker Issues",
    "title": "Issue: Changes not reflected after rebuild",
    "content": "Symptoms: . | Code changes don‚Äôt appear | Old version still running | Build shows cached layers | . Solutions: . | Force rebuild without cache: | 1 . | docker build --no-cache -t tvx:latest . | . | Remove old container and images: | 1 2 3 . | docker rm -f tvx docker rmi tvx:latest docker build -t tvx:latest . | . | . ",
    "url": "/TVx/manual/troubleshooting/docker/docker-issues.html#issue-changes-not-reflected-after-rebuild",
    
    "relUrl": "/manual/troubleshooting/docker/docker-issues.html#issue-changes-not-reflected-after-rebuild"
  },"108": {
    "doc": "Docker",
    "title": "Installation",
    "content": " ",
    "url": "/TVx/install/docker.html#installation",
    
    "relUrl": "/install/docker.html#installation"
  },"109": {
    "doc": "Docker",
    "title": "Prerequisites",
    "content": "See Prerequisites for system requirements. ",
    "url": "/TVx/install/docker.html#prerequisites",
    
    "relUrl": "/install/docker.html#prerequisites"
  },"110": {
    "doc": "Docker",
    "title": "Docker Installation",
    "content": "Quick Docker Run . | 1 2 3 4 5 6 7 . | docker run -d \\ --name tvx \\ -p 8777:80 \\ --restart unless-stopped \\ -e VITE_M3U_URL=\"http://your-tunarr-ip:8000/api/channels.m3u\" \\ -e VITE_XMLTV_URL=\"http://your-tunarr-ip:8000/api/xmltv.xml\" \\ ghcr.io/dopeytree/tvx:latest . | . Then open http://localhost:8777 . Docker Compose . | 1 2 3 4 5 6 7 8 9 10 11 12 . | services: tvx: image: ghcr.io/dopeytree/tvx:latest ports: - \"8777:80\" restart: unless-stopped environment: - TZ=UTC - VITE_M3U_URL=http://your-tunarr-ip:8000/api/channels.m3u - VITE_XMLTV_URL=http://your-tunarr-ip:8000/api/xmltv.xml volumes: - ./config:/config . | . Save as docker-compose.yml and run: . | 1 . | docker-compose up -d . | . Build Locally . | 1 2 3 4 5 6 7 8 9 10 . | # Build the image docker build -t tvx . # Run it docker run -d \\ -p 8777:80 \\ --name tvx \\ -e VITE_M3U_URL=\"http://your-tunarr-ip:8000/api/channels.m3u\" \\ -e VITE_XMLTV_URL=\"http://your-tunarr-ip:8000/api/xmltv.xml\" \\ tvx . | . ",
    "url": "/TVx/install/docker.html#docker-installation",
    
    "relUrl": "/install/docker.html#docker-installation"
  },"111": {
    "doc": "Docker",
    "title": "Docker",
    "content": " ",
    "url": "/TVx/install/docker.html",
    
    "relUrl": "/install/docker.html"
  },"112": {
    "doc": "EPG Not Showing",
    "title": "EPG Not Showing",
    "content": " ",
    "url": "/TVx/manual/troubleshooting/epg/epg-not-showing.html",
    
    "relUrl": "/manual/troubleshooting/epg/epg-not-showing.html"
  },"113": {
    "doc": "EPG Not Showing",
    "title": "Issue: Electronic Program Guide is empty",
    "content": "Symptoms: . | Channels load but no program information | Timeline is blank | No show titles or descriptions | . Solutions: . | Verify XMLTV URL: | 1 . | curl http://your-tunarr-ip:8000/api/xmltv.xml | head -20 . | . Should show XML data . | Check XMLTV parsing: . | Open browser console (F12) | Look for parsing errors | Check network tab for XMLTV request | . | Verify channel IDs match: . | XMLTV channel IDs must match M3U tvg-id values | Check Tunarr channel configuration | . | . ",
    "url": "/TVx/manual/troubleshooting/epg/epg-not-showing.html#issue-electronic-program-guide-is-empty",
    
    "relUrl": "/manual/troubleshooting/epg/epg-not-showing.html#issue-electronic-program-guide-is-empty"
  },"114": {
    "doc": "Features",
    "title": "Features",
    "content": "Instant Channel Surfing . ‚ö° Instant channel surfing ‚Äî tap ‚Üë/‚Üì to skim through channels quickly. Hold the keys to rapidly browse, release when you find something interesting. TV Guide . | Press G to open the full TV guide | Shows a 12-hour timeline across all channels | Displays poster artwork for programs | Click on any program to jump to that channel and time | . Theater Modes . | Click on the video player to cycle through views: . | Guide View: Shows channel list and current program info | Normal View: Standard player with controls | Immersive View: Full screen player with minimal UI | . | . Smart Channel Names . üè∑Ô∏è Smarter Tunarr channel names ‚Äî TVx automatically cleans up channel names and adds relevant icons: . | Pulp Fiction Movies ‚Üí Pulp Fiction [üé¨] | The Hitchhiker‚Äôs Guide to the Galaxy Shows ‚Üí The Hitchhiker‚Äôs Guide to the Galaxy [üì∫] | Extreme Ironing Sports ‚Üí Extreme Ironing [üèÜ] | The Tesla Files History ‚Üí The Tesla Files [üìú] | Cosmos Documentaries ‚Üí Cosmos [üìú] | . Vintage TV Effects . TVx includes authentic CRT television effects: . | Curved glass and scanlines | Chromatic aberration and vignette | Toggle vintage filter on/off for different aesthetics | . VHS Buffering . When a stream loads, TVx displays a vintage VHS loading animation while disks spin up and content buffers. ",
    "url": "/TVx/manual/features.html",
    
    "relUrl": "/manual/features.html"
  },"115": {
    "doc": "GUI",
    "title": "Main View",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#main-view",
    
    "relUrl": "/quick-start/gui.html#main-view"
  },"116": {
    "doc": "GUI",
    "title": "Theatre Mode",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#theatre-mode",
    
    "relUrl": "/quick-start/gui.html#theatre-mode"
  },"117": {
    "doc": "GUI",
    "title": "Full TV Guide",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#full-tv-guide",
    
    "relUrl": "/quick-start/gui.html#full-tv-guide"
  },"118": {
    "doc": "GUI",
    "title": "Keyboard Shortcuts Display",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#keyboard-shortcuts-display",
    
    "relUrl": "/quick-start/gui.html#keyboard-shortcuts-display"
  },"119": {
    "doc": "GUI",
    "title": "Vintage TV Filter = On",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#vintage-tv-filter--on",
    
    "relUrl": "/quick-start/gui.html#vintage-tv-filter--on"
  },"120": {
    "doc": "GUI",
    "title": "Vintage TV Filter = OFF",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#vintage-tv-filter--off",
    
    "relUrl": "/quick-start/gui.html#vintage-tv-filter--off"
  },"121": {
    "doc": "GUI",
    "title": "VHS Buffering Video",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#vhs-buffering-video",
    
    "relUrl": "/quick-start/gui.html#vhs-buffering-video"
  },"122": {
    "doc": "GUI",
    "title": "Main View",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#main-view-1",
    
    "relUrl": "/quick-start/gui.html#main-view-1"
  },"123": {
    "doc": "GUI",
    "title": "Theatre Mode",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#theatre-mode-1",
    
    "relUrl": "/quick-start/gui.html#theatre-mode-1"
  },"124": {
    "doc": "GUI",
    "title": "Full TV Guide",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#full-tv-guide-1",
    
    "relUrl": "/quick-start/gui.html#full-tv-guide-1"
  },"125": {
    "doc": "GUI",
    "title": "Keyboard Shortcuts Display",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#keyboard-shortcuts-display-1",
    
    "relUrl": "/quick-start/gui.html#keyboard-shortcuts-display-1"
  },"126": {
    "doc": "GUI",
    "title": "Vintage TV Filter = On",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#vintage-tv-filter--on-1",
    
    "relUrl": "/quick-start/gui.html#vintage-tv-filter--on-1"
  },"127": {
    "doc": "GUI",
    "title": "Vintage TV Filter = OFF",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#vintage-tv-filter--off-1",
    
    "relUrl": "/quick-start/gui.html#vintage-tv-filter--off-1"
  },"128": {
    "doc": "GUI",
    "title": "VHS Buffering Video",
    "content": ". ",
    "url": "/TVx/quick-start/gui.html#vhs-buffering-video-1",
    
    "relUrl": "/quick-start/gui.html#vhs-buffering-video-1"
  },"129": {
    "doc": "GUI",
    "title": "GUI",
    "content": " ",
    "url": "/TVx/quick-start/gui.html",
    
    "relUrl": "/quick-start/gui.html"
  },"130": {
    "doc": "Quick Start",
    "title": "Quick Start",
    "content": "Quick start guide for TVx. ",
    "url": "/TVx/quick-start/",
    
    "relUrl": "/quick-start/"
  },"131": {
    "doc": "Quick Start",
    "title": "Welcome to TVx",
    "content": "TVx brings the warmth of modern nostalgia to your streaming experience. This section will help you get up and running quickly. Quick Start Guide . | Install TVx - Follow the installation instructions | Configure - Set up your M3U and XMLTV URLs | Learn the Interface - Check out the GUI screenshots | Master the Features - Explore keyboard shortcuts and features | Troubleshoot - Find solutions to common issues | . ",
    "url": "/TVx/quick-start/#welcome-to-tvx",
    
    "relUrl": "/quick-start/#welcome-to-tvx"
  },"132": {
    "doc": "Documentation",
    "title": "Documentation",
    "content": "Documentation system and theme setup. ",
    "url": "/TVx/development/documentation%20dev/",
    
    "relUrl": "/development/documentation%20dev/"
  },"133": {
    "doc": "GitHub Automation",
    "title": "GitHub Automation",
    "content": "GitHub Actions and automation workflows. ",
    "url": "/TVx/development/github/",
    
    "relUrl": "/development/github/"
  },"134": {
    "doc": "Bug Fixes",
    "title": "Documentation",
    "content": "Documentation system and theme setup. ",
    "url": "/TVx/development/bug%20fixes/#documentation",
    
    "relUrl": "/development/bug%20fixes/#documentation"
  },"135": {
    "doc": "Bug Fixes",
    "title": "Bug Fixes",
    "content": " ",
    "url": "/TVx/development/bug%20fixes/",
    
    "relUrl": "/development/bug%20fixes/"
  },"136": {
    "doc": "Home",
    "title": "üì∫ TVx",
    "content": "This is the way - television you remember feeling: present, unhurried, analog. Get Started View on GitHub . An IPTV + EPG viewer for Tunarr (Plex/Jellyfin) that brings back the ritual of watching‚Äînot scrolling, not seeking, just being with what‚Äôs on. Like the grain of 35mm film üéûÔ∏è or the crackle before a record drops üíø, TVx trades sterile perfection for something alive. Curved glass üìü. Gentle flicker ‚ú®. Scanlines that breathe. Architecture . TVx is a client-side web frontend that interfaces with your Tunarr backend alongside your Plex library. It consumes M3U playlists and XMLTV EPG data generated by Tunarr, while displaying rich metadata and artwork from your Plex media server. ",
    "url": "/TVx/#-tvx",
    
    "relUrl": "/#-tvx"
  },"137": {
    "doc": "Home",
    "title": "‚ú® Key Features",
    "content": "‚ö° Instant Channel Surfing Hold ‚Üë/‚Üì to skim through channels; land when something catches your eye üìü CRT Warmth Authentic curvature, chromatic aberration, scanlines, and vignette effects üìÖ Full TV Guide Press G for a 12-hour timeline across all channels with poster artwork üé¨ Theater Modes Click the player to cycle views (guide ‚Üí normal ‚Üí immersive) üè∑Ô∏è Smart Channel Names Automatically strips filler words and adds icons . ",
    "url": "/TVx/#-key-features",
    
    "relUrl": "/#-key-features"
  },"138": {
    "doc": "Home",
    "title": "üñºÔ∏è Screenshots",
    "content": ". ",
    "url": "/TVx/#%EF%B8%8F-screenshots",
    
    "relUrl": "/#Ô∏è-screenshots"
  },"139": {
    "doc": "Home",
    "title": "üíö Support the Project",
    "content": "If TVx brings back the warmth of television for you, consider supporting its development: . ",
    "url": "/TVx/#-support-the-project",
    
    "relUrl": "/#-support-the-project"
  },"140": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "/TVx/",
    
    "relUrl": "/"
  },"141": {
    "doc": "Development",
    "title": "Development",
    "content": "Technical documentation for developers working on TVx. This section covers development setup, server architecture, and contributing guidelines. ",
    "url": "/TVx/development/",
    
    "relUrl": "/development/"
  },"142": {
    "doc": "Install",
    "title": "Install",
    "content": "Installation instructions for TVx. ",
    "url": "/TVx/install/",
    
    "relUrl": "/install/"
  },"143": {
    "doc": "Troubleshooting",
    "title": "Troubleshooting",
    "content": "Find solutions to common TVx issues quickly. Click on a category below to view detailed troubleshooting steps. ",
    "url": "/TVx/manual/troubleshooting/",
    
    "relUrl": "/manual/troubleshooting/"
  },"144": {
    "doc": "Troubleshooting",
    "title": "Quick Issue Categories",
    "content": "| Category | Description | . | Channels Not Loading | Empty channel list, no channels appear | . | Video Not Playing | Black screen, video playback issues | . | Loading VHS Not Playing | No loading animation during channel changes | . | EPG Not Showing | Electronic Program Guide is empty | . | Docker Issues | Container startup, rebuild problems | . | Performance Issues | Video stuttering, slow channel switching | . | Browser Console Errors | CORS, WebGL, network errors | . | Vintage TV Effects | CRT effects not working | . | Logging Issues | No logs in Docker/browser | . ",
    "url": "/TVx/manual/troubleshooting/#quick-issue-categories",
    
    "relUrl": "/manual/troubleshooting/#quick-issue-categories"
  },"145": {
    "doc": "Troubleshooting",
    "title": "Getting Help",
    "content": "If none of these solutions work: . | Check Docker logs: | 1 . | docker logs -f tvx . | . | Check browser console: . | Press F12 | Look at Console and Network tabs | Screenshot any errors | . | Check documentation: . | Installation Guide | Usage Guide | Development Guide | Bug Fix Documentation | . | Report an issue: . | Include Docker logs | Include browser console errors | Include steps to reproduce | Include environment details (OS, browser, Docker version) | . | . ",
    "url": "/TVx/manual/troubleshooting/#getting-help",
    
    "relUrl": "/manual/troubleshooting/#getting-help"
  },"146": {
    "doc": "Troubleshooting",
    "title": "Debug Mode",
    "content": "Enable verbose logging: . | 1 2 3 4 5 6 7 8 9 . | # Run container with debug output docker run -d --name tvx -p 8777:80 \\ -e VITE_M3U_URL=http://your-server:8000/api/channels.m3u \\ -e VITE_XMLTV_URL=http://your-server:8000/api/xmltv.xml \\ -e DEBUG=true \\ tvx:latest # Follow logs docker logs -f tvx . | . ",
    "url": "/TVx/manual/troubleshooting/#debug-mode",
    
    "relUrl": "/manual/troubleshooting/#debug-mode"
  },"147": {
    "doc": "Troubleshooting",
    "title": "Quick Diagnostic Checklist",
    "content": "Run these commands to gather diagnostic information: . | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 . | # 1. Check container status docker ps | grep tvx # 2. Check environment variables docker exec tvx env | grep VITE # 3. Check if env.js is generated docker exec tvx cat /usr/share/nginx/html/env.js # 4. Check if video file exists docker exec tvx ls -lh /usr/share/nginx/html/loading-VHS.mp4 # 5. Test video range requests curl -I -H \"Range: bytes=0-1023\" http://localhost:8777/loading-VHS.mp4 # 6. Test Tunarr connectivity curl -I http://your-tunarr-ip:8000/api/channels.m3u # 7. View recent logs docker logs tvx --tail 50 . | . Save output from these commands when reporting issues. ",
    "url": "/TVx/manual/troubleshooting/#quick-diagnostic-checklist",
    
    "relUrl": "/manual/troubleshooting/#quick-diagnostic-checklist"
  },"148": {
    "doc": "Manual",
    "title": "Manual",
    "content": "Detailed manual for TVx. ",
    "url": "/TVx/manual/",
    
    "relUrl": "/manual/"
  },"149": {
    "doc": "Keyboard Shortcuts",
    "title": "Keyboard Shortcuts",
    "content": "| Key | Action | . | ‚Üë ‚Üì | Channel surf (hold to skim) | . | G | Toggle full TV guide | . | F | Fullscreen | . | M | Mute/Unmute | . | Esc | Close modals/Exit theater | . Tips . | Hold arrow keys to rapidly browse through channels | Release when you find something interesting | Use Esc to quickly exit any modal or theater mode | . ",
    "url": "/TVx/quick-start/keyboard-shortcuts.html",
    
    "relUrl": "/quick-start/keyboard-shortcuts.html"
  },"150": {
    "doc": "Loading VHS Video Not Playing",
    "title": "Loading VHS Video Not Playing",
    "content": " ",
    "url": "/TVx/manual/troubleshooting/video/loading-vhs-not-playing.html",
    
    "relUrl": "/manual/troubleshooting/video/loading-vhs-not-playing.html"
  },"151": {
    "doc": "Loading VHS Video Not Playing",
    "title": "Issue: Black screen during channel changes instead of VHS loading animation",
    "content": "Symptoms: . | No loading animation when switching channels | Black screen during buffering | Docker logs show video errors | . Root Cause: Server doesn‚Äôt support HTTP Range Requests (required for video elements) . Solution: See bug fix documentation: docs/bugfix/2025-10/vhs-video-not-playing.md . Quick Check: . | 1 2 . | # Test range request support curl -I -H \"Range: bytes=0-1023\" http://localhost:8777/loading-VHS.mp4 . | . Should return 206 Partial Content, not 200 OK . ",
    "url": "/TVx/manual/troubleshooting/video/loading-vhs-not-playing.html#issue-black-screen-during-channel-changes-instead-of-vhs-loading-animation",
    
    "relUrl": "/manual/troubleshooting/video/loading-vhs-not-playing.html#issue-black-screen-during-channel-changes-instead-of-vhs-loading-animation"
  },"152": {
    "doc": "Logging Issues",
    "title": "Logging Issues",
    "content": " ",
    "url": "/TVx/manual/troubleshooting/logging/logging-issues.html",
    
    "relUrl": "/manual/troubleshooting/logging/logging-issues.html"
  },"153": {
    "doc": "Logging Issues",
    "title": "Issue: No logs in Docker container",
    "content": "Solutions: . | Check if logger is working: | 1 . | docker logs tvx | tail -20 . | . | Verify server.js logging endpoint: | 1 2 3 . | curl -X POST http://localhost:8777/log \\ -H \"Content-Type: application/json\" \\ -d '{\"level\":\"info\",\"message\":\"test\"}' . | . | Check browser console: . | Logs should appear in both browser and Docker | If only in browser, server.js may have issues | . | . ",
    "url": "/TVx/manual/troubleshooting/logging/logging-issues.html#issue-no-logs-in-docker-container",
    
    "relUrl": "/manual/troubleshooting/logging/logging-issues.html#issue-no-logs-in-docker-container"
  },"154": {
    "doc": "Logging",
    "title": "Logging &amp; Monitoring",
    "content": "TVx provides comprehensive logging of all user interactions directly to your Docker container logs, making it easy to monitor usage and troubleshoot issues. What Gets Logged . | Channel Selection: When channels are selected (including channel names and source) | Program Interactions: Opening/closing program popups with show details and episode info | Poster Views: Opening/closing program posters | Google Searches: When ‚ÄúMore Info‚Äù links are clicked (with show name and year) | Guide Navigation: Opening/closing full TV guide and channel guide | Settings Changes: All settings operations and modifications | File Operations: M3U/XMLTV file uploads and parsing results | Video Controls: Play/pause, mute/unmute, fullscreen toggles | UI Interactions: Stats panel, favorites management, keyboard shortcuts | Errors: All application errors and parsing failures | . Viewing Logs . Docker Container Logs: . | 1 . | docker logs tvx . | . Docker Compose Logs: . | 1 . | docker-compose logs -f tvx . | . Persistent Log File: . | 1 2 3 . | # View the persistent log file (survives container restarts) cat ./config/tvx.log tail -f ./config/tvx.log # Follow/tail logs . | . Unraid Logs: . | Container Logs: Docker tab ‚Üí TVx container ‚Üí Logs button | Persistent Log File: Navigate to /mnt/user/appdata/tvx/tvx.log or use terminal: | . | 1 . | tail -f /mnt/user/appdata/tvx/tvx.log . | . Sample Log Output . [2025-10-15T20:18:28.467Z] INFO: Loaded 20 channels [2025-10-15T20:18:28.481Z] INFO: Channel changed to: Favourite TV Shows [2025-10-15T20:18:28.498Z] INFO: Loaded stream URL for Favourite TV Shows: http://192.168.22.2:8000/stream/channels/0136ef47-9ddc-468f-8f81-3b9bbe9e09ba?streamMode=hls [2025-10-15T20:18:28.529Z] INFO: Loaded EPG data for 467 programmes [2025-10-15T20:18:28.675Z] INFO: Loading video loaded successfully [2025-10-15T20:18:28.680Z] INFO: Loading video started playing [2025-10-15T20:18:31.008Z] INFO: Channel changed to: Gerry Anderson Shows [2025-10-15T20:18:31.014Z] INFO: Loaded stream URL for Gerry Anderson Shows: http://192.168.22.2:8000/stream/channels/b460e1c6-d129-4146-ba60-ffd7a7d0f2ef?streamMode=hls [2025-10-15T20:18:50.406Z] INFO: Channel changed to: Gerry Anderson Shows [2025-10-15T20:18:50.484Z] INFO: Loading video started playing . Benefits . This logging system helps you: . | Monitor viewing patterns and popular channels/programs | Debug user interaction issues | Track application usage in multi-user environments | Verify that features are working correctly | Analyze user behavior and preferences | . ",
    "url": "/TVx/manual/logging.html#logging--monitoring",
    
    "relUrl": "/manual/logging.html#logging--monitoring"
  },"155": {
    "doc": "Logging",
    "title": "Logging",
    "content": " ",
    "url": "/TVx/manual/logging.html",
    
    "relUrl": "/manual/logging.html"
  },"156": {
    "doc": "Performance Issues",
    "title": "Performance Issues",
    "content": " ",
    "url": "/TVx/manual/troubleshooting/performance/performance-issues.html",
    
    "relUrl": "/manual/troubleshooting/performance/performance-issues.html"
  },"157": {
    "doc": "Performance Issues",
    "title": "Issue: Video stuttering or buffering",
    "content": "Solutions: . | Check network connection: . | Ping Tunarr server | Check bandwidth usage | Verify network stability | . | Reduce video quality: . | Open Settings (gear icon) | Lower video quality setting | Restart playback | . | Check Tunarr server load: . | Monitor Tunarr CPU/memory usage | Check if transcoding is required | Verify disk I/O isn‚Äôt bottlenecked | . | . ",
    "url": "/TVx/manual/troubleshooting/performance/performance-issues.html#issue-video-stuttering-or-buffering",
    
    "relUrl": "/manual/troubleshooting/performance/performance-issues.html#issue-video-stuttering-or-buffering"
  },"158": {
    "doc": "Performance Issues",
    "title": "Issue: Slow channel switching",
    "content": "Solutions: . | Check drive spin-up time: . | Loading video should play during spin-up | Verify loading video is working (see above) | . | Optimize Tunarr: . | Pre-generate channel streams | Use faster storage for media | Enable stream caching | . | . ",
    "url": "/TVx/manual/troubleshooting/performance/performance-issues.html#issue-slow-channel-switching",
    
    "relUrl": "/manual/troubleshooting/performance/performance-issues.html#issue-slow-channel-switching"
  },"159": {
    "doc": "Prerequisites",
    "title": "Installation",
    "content": " ",
    "url": "/TVx/install/prerequisites.html#installation",
    
    "relUrl": "/install/prerequisites.html#installation"
  },"160": {
    "doc": "Prerequisites",
    "title": "Prerequisites",
    "content": "Before running TVx, you need: . | Plex or Jellyfin media server set up | Tunarr (or Dizquetv) for channel streaming | Your M3U playlist and XMLTV EPG URLs from Tunarr | . ",
    "url": "/TVx/install/prerequisites.html",
    
    "relUrl": "/install/prerequisites.html"
  },"161": {
    "doc": "Prerequisites",
    "title": "Required Configuration",
    "content": "You MUST set your IPTV sources using environment variables: . | VITE_M3U_URL - Your IPTV M3U playlist URL (e.g., http://your-tunarr-ip:8000/api/channels.m3u) | VITE_XMLTV_URL - Your XMLTV EPG guide URL (e.g., http://your-tunarr-ip:8000/api/xmltv.xml) | . Note: If you change URLs later, clear your browser cache (Ctrl+Shift+R) to see updates. ",
    "url": "/TVx/install/prerequisites.html#required-configuration",
    
    "relUrl": "/install/prerequisites.html#required-configuration"
  },"162": {
    "doc": "Running Docs Server",
    "title": "Running the Documentation Server",
    "content": "This guide explains how to run the Jekyll-based documentation server for the TVx project. ",
    "url": "/TVx/development/documentation%20dev/running-docs-server.html#running-the-documentation-server",
    
    "relUrl": "/development/documentation%20dev/running-docs-server.html#running-the-documentation-server"
  },"163": {
    "doc": "Running Docs Server",
    "title": "Prerequisites",
    "content": ". | Ruby installed (check with ruby --version) | Bundler installed (check with bundle --version) | . ",
    "url": "/TVx/development/documentation%20dev/running-docs-server.html#prerequisites",
    
    "relUrl": "/development/documentation%20dev/running-docs-server.html#prerequisites"
  },"164": {
    "doc": "Running Docs Server",
    "title": "Installation",
    "content": ". | Navigate to the docs directory: . | 1 . | cd docs . | . | Install dependencies: . | 1 . | bundle install . | . | . ",
    "url": "/TVx/development/documentation%20dev/running-docs-server.html#installation",
    
    "relUrl": "/development/documentation%20dev/running-docs-server.html#installation"
  },"165": {
    "doc": "Running Docs Server",
    "title": "Running the Server",
    "content": "To start the documentation server, run: . | 1 . | cd docs &amp;&amp; bundle exec jekyll serve . | . The server will start and be available at: http://127.0.0.1:4000/TVx/ . ",
    "url": "/TVx/development/documentation%20dev/running-docs-server.html#running-the-server",
    
    "relUrl": "/development/documentation%20dev/running-docs-server.html#running-the-server"
  },"166": {
    "doc": "Running Docs Server",
    "title": "Building the Site",
    "content": "To build the documentation site without serving it, run: . | 1 . | cd docs &amp;&amp; bundle exec jekyll build . | . This will generate the static site in the _site directory. The jekyll serve command automatically builds the site and serves it with live reloading enabled. ",
    "url": "/TVx/development/documentation%20dev/running-docs-server.html#building-the-site",
    
    "relUrl": "/development/documentation%20dev/running-docs-server.html#building-the-site"
  },"167": {
    "doc": "Running Docs Server",
    "title": "Features",
    "content": ". | Auto-regeneration: The server automatically rebuilds when you make changes to documentation files | Live preview: View your changes in real-time in the browser | Remote theme: Uses the Just the Docs theme for a clean, documentation-focused layout | . ",
    "url": "/TVx/development/documentation%20dev/running-docs-server.html#features",
    
    "relUrl": "/development/documentation%20dev/running-docs-server.html#features"
  },"168": {
    "doc": "Running Docs Server",
    "title": "Stopping the Server",
    "content": "To stop the server, press Ctrl+C in the terminal where it‚Äôs running. ",
    "url": "/TVx/development/documentation%20dev/running-docs-server.html#stopping-the-server",
    
    "relUrl": "/development/documentation%20dev/running-docs-server.html#stopping-the-server"
  },"169": {
    "doc": "Running Docs Server",
    "title": "Troubleshooting",
    "content": "If you encounter issues: . | Ensure you‚Äôre in the docs directory when running commands | Make sure all dependencies are installed with bundle install | Check that port 4000 is not already in use by another service | . ",
    "url": "/TVx/development/documentation%20dev/running-docs-server.html#troubleshooting",
    
    "relUrl": "/development/documentation%20dev/running-docs-server.html#troubleshooting"
  },"170": {
    "doc": "Running Docs Server",
    "title": "Running Docs Server",
    "content": " ",
    "url": "/TVx/development/documentation%20dev/running-docs-server.html",
    
    "relUrl": "/development/documentation%20dev/running-docs-server.html"
  },"171": {
    "doc": "Server Implementation",
    "title": "Server Implementation",
    "content": " ",
    "url": "/TVx/development/server-implementation.html",
    
    "relUrl": "/development/server-implementation.html"
  },"172": {
    "doc": "Server Implementation",
    "title": "Overview",
    "content": "TVx uses a custom Node.js server (server.js) instead of nginx to serve the application and handle logging. This document explains the implementation details, rationale, and key features. ",
    "url": "/TVx/development/server-implementation.html#overview",
    
    "relUrl": "/development/server-implementation.html#overview"
  },"173": {
    "doc": "Server Implementation",
    "title": "Architecture",
    "content": "| 1 2 3 4 5 6 7 8 9 . | Docker Container ‚îú‚îÄ‚îÄ Node.js (Alpine) ‚îú‚îÄ‚îÄ /usr/share/nginx/html/ (static files) ‚îÇ ‚îú‚îÄ‚îÄ index.html ‚îÇ ‚îú‚îÄ‚îÄ assets/ ‚îÇ ‚îú‚îÄ‚îÄ loading-VHS.mp4 ‚îÇ ‚îú‚îÄ‚îÄ env.js (generated at runtime) ‚îÇ ‚îî‚îÄ‚îÄ server.js ‚îî‚îÄ‚îÄ Port 80 . | . ",
    "url": "/TVx/development/server-implementation.html#architecture",
    
    "relUrl": "/development/server-implementation.html#architecture"
  },"174": {
    "doc": "Server Implementation",
    "title": "Why Node.js Instead of Nginx?",
    "content": "The switch from nginx to Node.js was made to support: . | Server-side logging: Capture client-side logs in Docker container logs | Dynamic configuration: Generate env.js at runtime using environment variables | Custom endpoints: Add /log endpoint for centralized logging | Simpler deployment: Single runtime (Node.js) instead of nginx + separate tools | . Trade-offs . Advantages: . | ‚úÖ Custom logging endpoint | ‚úÖ Dynamic environment configuration | ‚úÖ Simpler Docker image (single runtime) | ‚úÖ Easy to extend with custom routes | . Disadvantages: . | ‚ö†Ô∏è Less battle-tested than nginx for static file serving | ‚ö†Ô∏è Requires implementing features nginx provides for free (range requests, compression, caching) | ‚ö†Ô∏è Potentially lower performance under high load | . ",
    "url": "/TVx/development/server-implementation.html#why-nodejs-instead-of-nginx",
    
    "relUrl": "/development/server-implementation.html#why-nodejs-instead-of-nginx"
  },"175": {
    "doc": "Server Implementation",
    "title": "Server.js Implementation",
    "content": "Core Functionality . The server handles three main responsibilities: . | Static file serving - Serves React build artifacts | Logging endpoint - Receives logs from browser | SPA routing - Falls back to index.html for React Router | . Code Structure . | 1 2 3 4 5 6 7 . | const http = require('http'); const fs = require('fs'); const path = require('path'); const url = require('url'); const PORT = 80; const STATIC_DIR = '/usr/share/nginx/html'; . | . Key Features . 1. Logging Endpoint . Route: POST /log . Receives logs from the browser and outputs them to Docker logs: . | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 . | if (req.method === 'POST' &amp;&amp; pathname === '/log') { let body = ''; req.on('data', chunk =&gt; { body += chunk.toString(); }); req.on('end', () =&gt; { try { const logData = JSON.parse(body); const timestamp = new Date().toISOString(); const level = logData.level || 'info'; const message = logData.message || body; console.log(`[${timestamp}] ${level.toUpperCase()}: ${message}`); } catch (e) { console.log(`[${new Date().toISOString()}] LOG: ${body}`); } res.writeHead(200, { 'Content-Type': 'text/plain' }); res.end('OK'); }); return; } . | . Usage from client: . | 1 2 3 4 5 6 7 8 . | // src/utils/logger.ts const sendLog = async (level: string, message: string) =&gt; { await fetch('/log', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ level, message }), }); }; . | . 2. HTTP Range Request Support . Critical for video playback! Browsers require range request support for video elements. | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 . | // Handle range requests for video files if (ext === '.mp4' &amp;&amp; req.headers.range) { const range = req.headers.range; const parts = range.replace(/bytes=/, '').split('-'); const start = parseInt(parts[0], 10); const end = parts[1] ? parseInt(parts[1], 10) : stats.size - 1; const chunksize = (end - start) + 1; const head = { 'Content-Range': `bytes ${start}-${end}/${stats.size}`, 'Accept-Ranges': 'bytes', 'Content-Length': chunksize, 'Content-Type': contentType, }; res.writeHead(206, head); fs.createReadStream(filePath, { start, end }).pipe(res); } . | . Why this is essential: . | Browsers use range requests to seek in videos | Without this, video elements fail with NotSupportedError | Nginx supports this automatically | See bug fix: docs/bugfix/2025-10/vhs-video-not-playing.md | . 3. MIME Type Handling . | 1 2 3 4 5 6 7 8 9 10 11 . | const contentType = { '.html': 'text/html', '.css': 'text/css', '.js': 'application/javascript', '.json': 'application/json', '.png': 'image/png', '.jpg': 'image/jpeg', '.ico': 'image/x-icon', '.mp4': 'video/mp4', '.webmanifest': 'application/manifest+json' }[ext] || 'text/plain'; . | . 4. SPA Fallback . Falls back to index.html for React Router routes: . | 1 2 3 4 5 6 . | fs.stat(filePath, (err, stats) =&gt; { if (err || !stats.isFile()) { filePath = path.join(STATIC_DIR, 'index.html'); } // ... serve file }); . | . ",
    "url": "/TVx/development/server-implementation.html#serverjs-implementation",
    
    "relUrl": "/development/server-implementation.html#serverjs-implementation"
  },"176": {
    "doc": "Server Implementation",
    "title": "Environment Configuration",
    "content": "Runtime Generation . Environment variables are injected at container startup: . | 1 . | CMD sh -c \"envsubst &lt; /usr/share/nginx/html/env.js.template &gt; /usr/share/nginx/html/env.js &amp;&amp; node /usr/share/nginx/html/server.js\" . | . Template (env.js.template) . | 1 2 3 4 . | window.ENV = { VITE_M3U_URL: \"$VITE_M3U_URL\", VITE_XMLTV_URL: \"$VITE_XMLTV_URL\" }; . | . Generated (env.js) . | 1 2 3 4 . | window.ENV = { VITE_M3U_URL: \"http://192.168.22.2:8000/api/channels.m3u\", VITE_XMLTV_URL: \"http://192.168.22.2:8000/api/xmltv.xml\" }; . | . Loading in Browser . index.html includes: . | 1 . | &lt;script src=\"/env.js\"&gt;&lt;/script&gt; . | . Client code accesses via: . | 1 . | const m3uUrl = (window as any).ENV?.VITE_M3U_URL || 'default-url'; . | . ",
    "url": "/TVx/development/server-implementation.html#environment-configuration",
    
    "relUrl": "/development/server-implementation.html#environment-configuration"
  },"177": {
    "doc": "Server Implementation",
    "title": "Logging System",
    "content": "Architecture . | 1 2 3 4 5 6 7 . | Browser (React App) ‚Üì fetch('/log', ...) Node.js Server (/log endpoint) ‚Üì console.log(...) Docker Container Logs ‚Üì docker logs tvx User/Admin . | . Client-Side Logger . Location: src/utils/logger.ts . | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 . | export const logger = { log: (message: string) =&gt; { console.log(message); sendLog('info', message); }, error: (message: string) =&gt; { console.error(message); sendLog('error', message); }, warn: (message: string) =&gt; { console.warn(message); sendLog('warn', message); }, info: (message: string) =&gt; { console.info(message); sendLog('info', message); }, }; . | . Usage Examples . | 1 2 3 4 5 6 7 8 9 10 11 . | // Channel loading logger.log(`Loaded ${channels.length} channels`); // Channel switching logger.info(`Channel changed to: ${channel.name}`); // Errors logger.error(`Failed to parse XMLTV: ${error}`); // Stream URLs logger.log(`Loaded stream URL for ${channel.name}: ${channel.url}`); . | . Log Format . | 1 . | [ISO-8601-TIMESTAMP] LEVEL: MESSAGE . | . Example: . | 1 2 3 . | [2025-10-15T20:18:28.467Z] INFO: Loaded 20 channels [2025-10-15T20:18:28.481Z] INFO: Channel changed to: Favourite TV Shows [2025-10-15T20:18:28.529Z] INFO: Loaded EPG data for 467 programmes . | . ",
    "url": "/TVx/development/server-implementation.html#logging-system",
    
    "relUrl": "/development/server-implementation.html#logging-system"
  },"178": {
    "doc": "Server Implementation",
    "title": "Performance Considerations",
    "content": "Current Implementation . | ‚úÖ Simple and easy to understand | ‚úÖ Sufficient for typical TVx usage (personal/family use) | ‚ö†Ô∏è Not optimized for high traffic | . Missing Features (vs Nginx) . | No gzip compression - Nginx compresses responses automatically | No caching headers - Nginx sets cache headers for static assets | No connection pooling - Nginx handles this efficiently | No rate limiting - Nginx can limit request rates | No HTTPS - Typically handled by reverse proxy | . Recommended Production Setup . For production deployments, consider: . | Use nginx as reverse proxy: | 1 2 3 4 5 6 7 8 . | server { listen 443 ssl; location / { proxy_pass http://localhost:8777; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; } } . | . | Or add compression to server.js: | 1 2 . | const zlib = require('zlib'); // Compress responses . | . | Or switch back to nginx + separate logging service | . ",
    "url": "/TVx/development/server-implementation.html#performance-considerations",
    
    "relUrl": "/development/server-implementation.html#performance-considerations"
  },"179": {
    "doc": "Server Implementation",
    "title": "Testing",
    "content": "Test Static File Serving . | 1 . | curl http://localhost:8777/ . | . Should return the React app HTML. Test Logging Endpoint . | 1 2 3 . | curl -X POST http://localhost:8777/log \\ -H \"Content-Type: application/json\" \\ -d '{\"level\":\"info\",\"message\":\"Test log\"}' . | . Should return OK and appear in Docker logs. Test Range Requests . | 1 . | curl -I -H \"Range: bytes=0-1023\" http://localhost:8777/loading-VHS.mp4 . | . Should return: . | 1 2 3 . | HTTP/1.1 206 Partial Content Content-Range: bytes 0-1023/9518187 Accept-Ranges: bytes . | . View Logs . | 1 . | docker logs -f tvx . | . ",
    "url": "/TVx/development/server-implementation.html#testing",
    
    "relUrl": "/development/server-implementation.html#testing"
  },"180": {
    "doc": "Server Implementation",
    "title": "Troubleshooting",
    "content": "Video Not Playing . Symptom: Video elements show NotSupportedError . Solution: Ensure range request support is implemented (see above) . Debug: . | 1 . | curl -I -H \"Range: bytes=0-1023\" http://localhost:8777/loading-VHS.mp4 . | . Should return 206 Partial Content, not 200 OK. Logs Not Appearing . Symptom: Browser logs don‚Äôt appear in Docker logs . Debug: . | 1 2 3 4 5 . | # Test logging endpoint curl -X POST http://localhost:8777/log -d '{\"level\":\"test\",\"message\":\"test\"}' # Check if it appears docker logs tvx | tail -1 . | . Environment Variables Not Loading . Symptom: App uses default URLs instead of environment variables . Debug: . | 1 2 3 4 . | # Check if env.js was generated docker exec tvx cat /usr/share/nginx/html/env.js # Should show your URLs, not $VITE_M3U_URL . | . ",
    "url": "/TVx/development/server-implementation.html#troubleshooting",
    
    "relUrl": "/development/server-implementation.html#troubleshooting"
  },"181": {
    "doc": "Server Implementation",
    "title": "Future Improvements",
    "content": "Potential Enhancements . | Add gzip compression for better performance | Implement caching headers for static assets | Add health check endpoint (/health) | Add metrics endpoint for monitoring | Implement log levels (debug, info, warn, error) | Add log rotation to prevent disk fill | WebSocket support for real-time updates | API endpoints for settings management | . Alternative Approaches . | Keep nginx, add logging service: . | Use nginx for static files (faster, more features) | Add separate Node.js service for logging | More complex architecture but better performance | . | Use Express.js: . | More mature server framework | Built-in middleware for compression, caching, etc. | Easier to extend | . | Use existing static server packages: . | serve-static | http-server | Battle-tested, includes range requests, etc. | . | . ",
    "url": "/TVx/development/server-implementation.html#future-improvements",
    
    "relUrl": "/development/server-implementation.html#future-improvements"
  },"182": {
    "doc": "Server Implementation",
    "title": "References",
    "content": ". | Bug Fix: Range Request Support - docs/bugfix/2025-10/vhs-video-not-playing.md | HTTP Range Requests (RFC 7233): https://tools.ietf.org/html/rfc7233 | Node.js HTTP Server: https://nodejs.org/api/http.html | Docker Environment Variables: https://docs.docker.com/engine/reference/run/#env-environment-variables | . ",
    "url": "/TVx/development/server-implementation.html#references",
    
    "relUrl": "/development/server-implementation.html#references"
  },"183": {
    "doc": "Server Implementation",
    "title": "Related Files",
    "content": ". | server.js - The server implementation | env.js.template - Environment variable template | Dockerfile - Container build configuration | src/utils/logger.ts - Client-side logger | docs/bugfix/2025-10/vhs-video-not-playing.md - Range request bug fix | . ",
    "url": "/TVx/development/server-implementation.html#related-files",
    
    "relUrl": "/development/server-implementation.html#related-files"
  },"184": {
    "doc": "Tech Stack",
    "title": "Tech Stack",
    "content": ". | Frontend: React 18 + TypeScript | Build: Vite | Styling: Tailwind CSS + Radix UI | Video: HLS.js for streaming | Effects: WebGL shaders for CRT effects | Container: Alpine Linux + Nginx | . ",
    "url": "/TVx/manual/tech-stack.html",
    
    "relUrl": "/manual/tech-stack.html"
  },"185": {
    "doc": "Unraid",
    "title": "Installation",
    "content": " ",
    "url": "/TVx/install/unraid.html#installation",
    
    "relUrl": "/install/unraid.html#installation"
  },"186": {
    "doc": "Unraid",
    "title": "Prerequisites",
    "content": "See Prerequisites for system requirements. ",
    "url": "/TVx/install/unraid.html#prerequisites",
    
    "relUrl": "/install/unraid.html#prerequisites"
  },"187": {
    "doc": "Unraid",
    "title": "Unraid Installation",
    "content": ". | Open Docker tab in Unraid | Click Add Container | Configure the following fields: | . | Field | Value | . | Name | tvx | . | Repository | ghcr.io/dopeytree/tvx:latest | . | Registry URL | https://github.com/dopeytree/TVx/pkgs/container/tvx | . | Icon URL | https://raw.githubusercontent.com/dopeytree/TVx/main/public/logo.png | . | WebUI | http://[IP]:[PORT:8777] | . | Port | Container: 80, Host: 8777 | . | Network Type | Bridge | . | Add environment variables: . | VITE_M3U_URL = http://your-tunarr-ip:8000/api/channels.m3u | VITE_XMLTV_URL = http://your-tunarr-ip:8000/api/xmltv.xml | TZ = America/New_York (your timezone) | . | Add path mapping (optional but recommended): . | Container Path: /config | Host Path: /mnt/user/appdata/tvx | Access Mode: Read/Write | . | Click Apply | Access at: http://YOUR-UNRAID-IP:8777 | . Persistent Storage: The /config path stores: . | Settings and configuration (settings.json) | Application logs (tvx.log) - automatically rotated | Access logs at: /mnt/user/appdata/tvx/tvx.log | . ",
    "url": "/TVx/install/unraid.html#unraid-installation",
    
    "relUrl": "/install/unraid.html#unraid-installation"
  },"188": {
    "doc": "Unraid",
    "title": "Unraid",
    "content": " ",
    "url": "/TVx/install/unraid.html",
    
    "relUrl": "/install/unraid.html"
  },"189": {
    "doc": "Usage",
    "title": "Getting Started",
    "content": ". | Ensure your Tunarr server is running and accessible | Set the VITE_M3U_URL and VITE_XMLTV_URL environment variables | Start TVx and open http://localhost:8777 | Use arrow keys to browse channels | . ",
    "url": "/TVx/manual/usage-overview.html#getting-started",
    
    "relUrl": "/manual/usage-overview.html#getting-started"
  },"190": {
    "doc": "Usage",
    "title": "Quick Tips",
    "content": ". | Use ‚Üë ‚Üì arrow keys to surf channels | Press G to open the full TV guide | Press F for fullscreen | Click the video player to cycle through theater modes | . ",
    "url": "/TVx/manual/usage-overview.html#quick-tips",
    
    "relUrl": "/manual/usage-overview.html#quick-tips"
  },"191": {
    "doc": "Usage",
    "title": "Usage",
    "content": " ",
    "url": "/TVx/manual/usage-overview.html",
    
    "relUrl": "/manual/usage-overview.html"
  },"192": {
    "doc": "VHS Video Not Playing Fix",
    "title": "Bug Fix: Loading VHS Video Not Playing After Node.js Server Implementation",
    "content": "Date: October 15, 2025 Branch: logging Issue: Loading-VHS.mp4 video not playing during channel changes after switching from nginx to Node.js server . ",
    "url": "/TVx/development/bug%20fixes/2025-10/vhs-video-not-playing.html#bug-fix-loading-vhs-video-not-playing-after-nodejs-server-implementation",
    
    "relUrl": "/development/bug%20fixes/2025-10/vhs-video-not-playing.html#bug-fix-loading-vhs-video-not-playing-after-nodejs-server-implementation"
  },"193": {
    "doc": "VHS Video Not Playing Fix",
    "title": "Problem Description",
    "content": "After implementing server.js to replace nginx (commit 7834b72), the loading-VHS.mp4 video stopped playing when: . | Channels were selected | Up/down arrow keys were pressed to change channels | Before the main stream was ready/buffering | . The vintage TV effect (WebGL canvas) would show a black screen instead of the VHS loading animation that previously worked with nginx. ",
    "url": "/TVx/development/bug%20fixes/2025-10/vhs-video-not-playing.html#problem-description",
    
    "relUrl": "/development/bug%20fixes/2025-10/vhs-video-not-playing.html#problem-description"
  },"194": {
    "doc": "VHS Video Not Playing Fix",
    "title": "Root Cause Analysis",
    "content": "Step 1: Initial Investigation - Video Element Visibility . Initially suspected the video element rendering was the issue. The loading video element had been changed to use conditional visibility: . | 1 2 3 4 5 6 7 8 . | // SUSPECTED ISSUE (but wasn't the actual problem): &lt;video ref={loadingVideoRef} style={{ display: 'none' }} ... /&gt; . | . Changed to: . | 1 2 3 4 5 6 7 . | &lt;video ref={loadingVideoRef} style={{ position: 'absolute', width: '1px', height: '1px', opacity: 0, pointerEvents: 'none' }} ... /&gt; . | . This change allowed the browser to technically ‚Äúsee‚Äù the video element, but the video still didn‚Äôt play. Step 2: Log Analysis - The Real Culprit . Docker logs revealed the actual error: . [2025-10-15T20:14:09.886Z] ERROR: Loading video play error: NotSupportedError: The operation is not supported. [2025-10-15T20:14:09.887Z] ERROR: Loading video restart error: NotSupportedError: The operation is not supported. [2025-10-15T20:14:09.888Z] ERROR: Loading video failed to load: [object Event] . The NotSupportedError indicated the browser was rejecting the video file entirely. Step 3: HTTP Range Request Testing . Tested the Node.js server‚Äôs HTTP response for video files: . | 1 . | curl -I -H \"Range: bytes=0-1023\" http://localhost:8777/loading-VHS.mp4 . | . Result from Node.js server (BROKEN): . | 1 2 . | HTTP/1.1 200 OK Content-Type: video/mp4 . | . Result from nginx (WORKING): . | 1 2 3 4 5 . | HTTP/1.1 206 Partial Content Content-Range: bytes 0-1023/9518187 Accept-Ranges: bytes Content-Length: 1024 Content-Type: video/mp4 . | . The Issue . Video elements in browsers REQUIRE HTTP Range Request support (RFC 7233) to: . | Load video metadata | Seek within the video | Play the video properly (especially for larger files) | . Without range request support, browsers reject the video with NotSupportedError. Nginx supports range requests automatically, but the simple Node.js server implementation didn‚Äôt. ",
    "url": "/TVx/development/bug%20fixes/2025-10/vhs-video-not-playing.html#root-cause-analysis",
    
    "relUrl": "/development/bug%20fixes/2025-10/vhs-video-not-playing.html#root-cause-analysis"
  },"195": {
    "doc": "VHS Video Not Playing Fix",
    "title": "The Fix",
    "content": "Modified server.js to Support HTTP Range Requests . Added range request handling for MP4 files: . | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 . | // Handle range requests for video files if (ext === '.mp4' &amp;&amp; req.headers.range) { const range = req.headers.range; const parts = range.replace(/bytes=/, '').split('-'); const start = parseInt(parts[0], 10); const end = parts[1] ? parseInt(parts[1], 10) : stats.size - 1; const chunksize = (end - start) + 1; const head = { 'Content-Range': `bytes ${start}-${end}/${stats.size}`, 'Accept-Ranges': 'bytes', 'Content-Length': chunksize, 'Content-Type': contentType, }; res.writeHead(206, head); fs.createReadStream(filePath, { start, end }).pipe(res); } else { // Normal file serving fs.readFile(filePath, (err, data) =&gt; { if (err) { res.writeHead(404); res.end('Not Found'); return; } const headers = { 'Content-Type': contentType }; // Add Accept-Ranges header for video files if (ext === '.mp4') { headers['Accept-Ranges'] = 'bytes'; } res.writeHead(200, headers); res.end(data); }); } . | . ",
    "url": "/TVx/development/bug%20fixes/2025-10/vhs-video-not-playing.html#the-fix",
    
    "relUrl": "/development/bug%20fixes/2025-10/vhs-video-not-playing.html#the-fix"
  },"196": {
    "doc": "VHS Video Not Playing Fix",
    "title": "Testing Commands",
    "content": "1. Build Docker Image . | 1 2 . | cd /Users/ed/TVx docker build -t tvx:latest . | . 2. Remove Old Container . | 1 . | docker rm -f tvx . | . 3. Run Container with Environment Variables . | 1 2 3 4 5 6 . | docker run -d \\ --name tvx \\ -p 8777:80 \\ -e VITE_M3U_URL=http://192.168.22.2:8000/api/channels.m3u \\ -e VITE_XMLTV_URL=http://192.168.22.2:8000/api/xmltv.xml \\ tvx:latest . | . 4. Test Range Request Support . | 1 . | curl -I -H \"Range: bytes=0-1023\" http://localhost:8777/loading-VHS.mp4 . | . Expected output (FIXED): . | 1 2 3 4 5 . | HTTP/1.1 206 Partial Content Content-Range: bytes 0-1023/9518187 Accept-Ranges: bytes Content-Length: 1024 Content-Type: video/mp4 . | . 5. View Logs . | 1 . | docker logs -f tvx . | . 6. Combined Build &amp; Run Command . | 1 2 3 4 5 6 7 8 9 . | cd /Users/ed/TVx &amp;&amp; \\ docker build -t tvx:latest . &amp;&amp; \\ docker rm -f tvx &amp;&amp; \\ docker run -d \\ --name tvx \\ -p 8777:80 \\ -e VITE_M3U_URL=http://192.168.22.2:8000/api/channels.m3u \\ -e VITE_XMLTV_URL=http://192.168.22.2:8000/api/xmltv.xml \\ tvx:latest . | . ",
    "url": "/TVx/development/bug%20fixes/2025-10/vhs-video-not-playing.html#testing-commands",
    
    "relUrl": "/development/bug%20fixes/2025-10/vhs-video-not-playing.html#testing-commands"
  },"197": {
    "doc": "VHS Video Not Playing Fix",
    "title": "Verification",
    "content": "After the fix: . | Open http://localhost:8777 in browser | Wait for channels to load (check that URLs are correct in browser Network tab) | Select a channel or press up/down arrow keys | The loading-VHS.mp4 video now plays with vintage TV effects during the 2-second channel change buffer period | Docker logs show successful video loading: | 1 2 . | [2025-10-15T20:18:45.123Z] INFO: Loading video loaded successfully [2025-10-15T20:18:45.124Z] INFO: Loading video started playing . | . | . ",
    "url": "/TVx/development/bug%20fixes/2025-10/vhs-video-not-playing.html#verification",
    
    "relUrl": "/development/bug%20fixes/2025-10/vhs-video-not-playing.html#verification"
  },"198": {
    "doc": "VHS Video Not Playing Fix",
    "title": "Files Modified",
    "content": ". | /Users/ed/TVx/server.js - Added HTTP Range Request support for MP4 files | /Users/ed/TVx/src/components/VideoPlayer.tsx - Changed loading video element from display: 'none' to invisible but playable style | . ",
    "url": "/TVx/development/bug%20fixes/2025-10/vhs-video-not-playing.html#files-modified",
    
    "relUrl": "/development/bug%20fixes/2025-10/vhs-video-not-playing.html#files-modified"
  },"199": {
    "doc": "VHS Video Not Playing Fix",
    "title": "Technical Notes",
    "content": "HTTP Range Requests (RFC 7233) . Range requests allow clients to request specific byte ranges of a file. This is essential for: . | Video/Audio streaming: Browsers need to load metadata first, then stream chunks | Seeking: Jumping to different parts of the video | Resuming downloads: Continuing interrupted downloads | Bandwidth optimization: Only loading what‚Äôs needed | . Key Headers . | Request: Range: bytes=0-1023 (client requests bytes 0-1023) | Response: 206 Partial Content (server returns partial content) | Response: Content-Range: bytes 0-1023/9518187 (what‚Äôs being sent / total size) | Response: Accept-Ranges: bytes (server supports range requests) | . Why Nginx Worked . Nginx has built-in support for range requests. It automatically: . | Parses Range headers | Returns 206 responses with proper headers | Streams file chunks efficiently | . Why Simple Node.js Didn‚Äôt Work . The basic fs.readFile() implementation: . | Always reads the entire file | Always returns 200 OK | Ignores Range headers | Causes browsers to reject video files | . ",
    "url": "/TVx/development/bug%20fixes/2025-10/vhs-video-not-playing.html#technical-notes",
    
    "relUrl": "/development/bug%20fixes/2025-10/vhs-video-not-playing.html#technical-notes"
  },"200": {
    "doc": "VHS Video Not Playing Fix",
    "title": "Related Commits",
    "content": ". | 7834b72 - ‚Äúinclude server.js persistent storage‚Äù (introduced the bug) | 8fe4559 - ‚ÄúRevert ‚Äòinclude server.js persistent storage‚Äô‚Äù (nginx still worked) | Current - Fixed by adding range request support to server.js | . ",
    "url": "/TVx/development/bug%20fixes/2025-10/vhs-video-not-playing.html#related-commits",
    
    "relUrl": "/development/bug%20fixes/2025-10/vhs-video-not-playing.html#related-commits"
  },"201": {
    "doc": "VHS Video Not Playing Fix",
    "title": "Lessons Learned",
    "content": ". | Video files require HTTP Range Request support - This is not optional for modern browsers | Test all media types when switching servers - Different file types have different requirements | Nginx provides many features ‚Äúfor free‚Äù - When replacing it, all those features must be reimplemented | Browser console errors can be misleading - ‚ÄúNotSupportedError‚Äù didn‚Äôt clearly indicate missing range support | Use curl to test HTTP headers - Essential for debugging server-level issues | . ",
    "url": "/TVx/development/bug%20fixes/2025-10/vhs-video-not-playing.html#lessons-learned",
    
    "relUrl": "/development/bug%20fixes/2025-10/vhs-video-not-playing.html#lessons-learned"
  },"202": {
    "doc": "VHS Video Not Playing Fix",
    "title": "Future Improvements",
    "content": "Consider using a proper Node.js static file server library like: . | express with express-static middleware | serve-static package | koa-static for Koa framework | . These libraries handle: . | Range requests | ETag caching | Compression | MIME types | Error handling | . Or keep using nginx for production deployments (it‚Äôs battle-tested for a reason). ",
    "url": "/TVx/development/bug%20fixes/2025-10/vhs-video-not-playing.html#future-improvements",
    
    "relUrl": "/development/bug%20fixes/2025-10/vhs-video-not-playing.html#future-improvements"
  },"203": {
    "doc": "VHS Video Not Playing Fix",
    "title": "VHS Video Not Playing Fix",
    "content": " ",
    "url": "/TVx/development/bug%20fixes/2025-10/vhs-video-not-playing.html",
    
    "relUrl": "/development/bug%20fixes/2025-10/vhs-video-not-playing.html"
  },"204": {
    "doc": "Video Not Playing",
    "title": "Video Not Playing",
    "content": " ",
    "url": "/TVx/manual/troubleshooting/video/video-not-playing.html",
    
    "relUrl": "/manual/troubleshooting/video/video-not-playing.html"
  },"205": {
    "doc": "Video Not Playing",
    "title": "Issue: Video player shows black screen",
    "content": "Symptoms: . | Channel list loads fine | Video area is black | No playback controls | . Solutions: . | Check HLS stream URL: | 1 2 . | # View Docker logs docker logs tvx | grep \"stream URL\" . | . | Verify stream is accessible: | 1 . | curl -I http://your-tunarr-ip:8000/stream/channels/CHANNEL_ID?streamMode=hls . | . | Check browser compatibility: . | Chrome/Edge: Full support | Firefox: May need native HLS | Safari: Native HLS support | . | Test with different channel: . | Try selecting another channel | Check if specific channels fail | . | . ",
    "url": "/TVx/manual/troubleshooting/video/video-not-playing.html#issue-video-player-shows-black-screen",
    
    "relUrl": "/manual/troubleshooting/video/video-not-playing.html#issue-video-player-shows-black-screen"
  },"206": {
    "doc": "Vintage TV Effects Issues",
    "title": "Vintage TV Effects Issues",
    "content": " ",
    "url": "/TVx/manual/troubleshooting/effects/vintage-tv-effects-issues.html",
    
    "relUrl": "/manual/troubleshooting/effects/vintage-tv-effects-issues.html"
  },"207": {
    "doc": "Vintage TV Effects Issues",
    "title": "Issue: CRT effects not working",
    "content": "Symptoms: . | Video plays but looks modern/flat | No scanlines or curvature | No chromatic aberration | . Solutions: . | Check vintage TV setting: . | Open Settings (gear icon) | Verify ‚ÄúVintage TV‚Äù is enabled | . | Check WebGL support: . | Open browser console | Type: !!document.createElement('canvas').getContext('webgl') | Should return true | . | Try different browser: . | Chrome/Edge: Best WebGL support | Firefox: Good support | Safari: May have limitations | . | . ",
    "url": "/TVx/manual/troubleshooting/effects/vintage-tv-effects-issues.html#issue-crt-effects-not-working",
    
    "relUrl": "/manual/troubleshooting/effects/vintage-tv-effects-issues.html#issue-crt-effects-not-working"
  }
}
